{"version":3,"file":"static/js/921.d2cea5d0.chunk.js","mappings":"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","sources":["components/PetsItem/PetsItem.styled.js","components/PetsItem/PetsItem.jsx","components/PetsList/PetsList.styled.js","components/PetsList/PetsList.jsx","components/AddPetButton/AddPetButton.styled.js","components/AddPetButton/AddPetButton.jsx","components/PetsData/PetsData.styled.js","components/PetsData/PetsData.jsx","pages/UserPage/UserPage.styled.js","components/UserForm/UserForm.styled.js","components/UserForm/UserForm.jsx","pages/UserPage/UserPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PetCard = styled.div`\n  width: 280px;\n\n  border-radius: 4px;\n  padding: 20px;\n  margin: 0 auto;\n  border-radius: 20px;\n  background: #fff;\n  /* Shadow default */\n  box-shadow: 3px 8px 14px 0px rgba(136, 198, 253, 0.19);\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    width: 703px;\n    height: 256px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 821px;\n    height: 212px;\n  }\n`;\n\nexport const PetFoto = styled.img`\n  width: 240px;\n  height: 240px;\n\n  border-radius: 20px;\n\n  margin-bottom: 20px;\n\n  /* padding: 20px;\n  margin: 0 auto;\n  border-radius: 20px;\n  background: #fff; */\n  /* Shadow default */\n  /* box-shadow: 3px 8px 14px 0px rgba(136, 198, 253, 0.19); */\n\n  @media screen and (min-width: 768px) {\n    width: 128px;\n    height: 128px;\n\n    margin-right: 20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 161px;\n    height: 161px;\n\n    margin-right: 32px;\n  }\n`;\n\nexport const PetDesc = styled.ul`\n  position: relative;\n`;\n\nexport const Description = styled.li`\n  color: #000;\n\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: calc(22 / 14);\n  /* line-height: 22px; */\n  letter-spacing: 0.56px;\n\n  &:not(:last-child) {\n    margin-bottom: 12px;\n  }\n\n  @media screen and (min-width: 768px) {\n    color: var(--main-color);\n\n    &:not(:last-child) {\n      margin-bottom: 16px;\n    }\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 16px;\n    line-height: normal;\n    letter-spacing: 0.64px;\n  }\n`;\n\nexport const Subtitle = styled.span`\n  font-weight: 700;\n\n  @media screen and (min-width: 768px) {\n    font-weight: 600;\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\n\nexport const DeleteButton = styled.button`\n  position: absolute;\n  top: -12px;\n  right: -12px;\n  padding: 0;\n  width: 40px;\n  height: 40px;\n\n  background: transparent;\n  border: none;\n  border-radius: 50%;\n\n  cursor: pointer;\n  color: var(--dark-blue);\n\n  &:hover {\n    background: var(--dark-blue);\n    color: white;\n  }\n`;\n\nexport const IconTrash = styled.svg`\n  stroke: currentColor;\n`;\n","// Компонент рендерить детальну інформацію про власного\n// домашнього улюбленця користувача з можливістю\n//  видалення картки.Клік по кнопці видалення картки\n//  відкриває модальне вікно  ModalApproveAction\n\nimport sprite from '../../images/icons.svg';\nimport { DeleteButton, Description, IconTrash, PetCard, PetDesc, PetFoto, Subtitle } from './PetsItem.styled';\nimport defaultImage from '../../images/x1/petphoto/pet-photo-small.jpg';\n\nconst PetItem = () =>\n  //   {\n  //     //   pet: { id, img, name, date, type, comments },\n  //     //   onDelete,\n  //   }\n  {\n    return (\n      <PetCard>\n        <PetFoto src={defaultImage} />\n        <PetDesc>\n          <Description>\n            <Subtitle>Name: </Subtitle>\n          </Description>\n          <Description>\n            <Subtitle>Date of birth: </Subtitle>\n          </Description>\n          <Description>\n            <Subtitle>Type: </Subtitle>Basenji\n          </Description>\n          <Description>\n            <Subtitle> Comments: </Subtitle>\n            Jack is a gray Persian cat with green eyes. He loves to be pampered and groomed, and enjoys playing with\n            toys. Although a bit shy, he's a loyal and affectionate lap cat.\n          </Description>\n\n          <DeleteButton>\n            <IconTrash width={24} height={24}>\n              <use href={`${sprite}#icon-trash-2`}></use>\n            </IconTrash>\n          </DeleteButton>\n        </PetDesc>\n      </PetCard>\n    );\n  };\n\nexport default PetItem;\n","import styled from 'styled-components';\n\nexport const UserPetsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n  gap: 20px;\n\n  @media screen and (min-width: 768px) {\n  }\n\n  @media screen and (min-width: 1280px) {\n    gap: 24px;\n  }\n`;\n","// import { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\nimport PetItem from '../PetsItem/PetsItem';\nimport { UserPetsList } from './PetsList.styled';\n\nconst PetsList = () => {\n  //   const [pet, setPet] = useState([]);\n  //   const { petId } = useParams();\n\n  //   useEffect(() => {\n  //     const getPet = async () => {\n  //       const result = await getUserPet(petId);\n  //       setPet([...result]);\n  //     };\n  //     getPet();\n  //   }, [petId]);\n  return (\n    <>\n      <UserPetsList>\n        <PetItem />\n      </UserPetsList>\n    </>\n  );\n};\nexport default PetsList;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const AddPet = styled(Link)`\n  border-radius: 40px;\n  background: var(--dark-blue);\n  border: 2px solid var(--dark-blue);\n  color: var(--container-bg);\n  cursor: pointer;\n  display: inline-flex;\n  width: 129px;\n  height: 40px;\n  padding: 9px 16px;\n  align-items: center;\n\n  gap: 8px;\n\n  font-size: 16px;\n  font-weight: 700;\n  line-height: normal;\n  font-style: normal;\n\n  /* letter-spacing: 0.64px; */\n\n  &:hover,\n  &:focus {\n    background: var(--gradient-blue-bg);\n  }\n`;\nexport const IconPlusSmall = styled.svg`\n  stroke: currentColor;\n`;\n","import sprite from '../../images/icons.svg';\nimport { AddPet, IconPlusSmall } from './AddPetButton.styled';\n\nconst AddPetButton = () => {\n  return (\n    <AddPet to=\"/add-pet\">\n      Add Pet\n      <IconPlusSmall width={24} height={24}>\n        <use href={`${sprite}#icon-plus-small`}></use>\n      </IconPlusSmall>\n    </AddPet>\n  );\n};\n\nexport default AddPetButton;\n","import styled from 'styled-components';\n\nexport const PetDataContainer = styled.div`\n  width: 100%;\n\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  margin-top: 40px;\n\n  @media screen and (min-width: 768px) {\n    gap: 20px;\n  }\n  @media screen and (min-width: 1280px) {\n    gap: 24px;\n    margin-top: 0;\n  }\n`;\n\nexport const TitleContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n`;\n\nexport const Title = styled.h2`\n  color: var(--main-color);\n  font-family: Manrope;\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n`;\n// Manrope - Medium;20px\n\n// export const AddPetButton = styled.button`\n//   border-radius: 40px;\n//   background: var(--dark-blue);\n//   border: 2px solid var(--dark-blue);\n//   color: var(--container-bg);\n//   cursor: pointer;\n//   display: inline-flex;\n//   width: 129px;\n//   height: 40px;\n//   padding: 9px 16px;\n//   align-items: center;\n\n//   gap: 8px;\n//   font-family: Manrope;\n//   font-size: 16px;\n//   font-weight: 700;\n//   line-height: normal;\n//   font-style: normal;\n\n//   /* letter-spacing: 0.64px; */\n\n//   &:hover,\n//   &:focus {\n//     background: var(--gradient-blue-bg);\n//     /* color: var(--dark-blue); */\n//   }\n// `;\n\nexport const IconPlusSmall = styled.svg`\n  stroke: currentColor;\n`;\n","// Компонент рендерить кнопку - посилання Add pet,\n//     що переадресовує авторизованого користувача\n//      на сторінку AddPetPage для додавання карточки з улюбленцем,\n//     та список відповідних карточок - PetsList\n\nimport { Link } from 'react-router-dom';\nimport PetsList from '../PetsList/PetsList';\nimport sprite from '../../images/icons.svg';\nimport AddPetButton from '../AddPetButton/AddPetButton';\nimport { PetDataContainer, Title, TitleContainer, IconPlusSmall } from './PetsData.styled';\n\nconst PetData = () => {\n  return (\n    <PetDataContainer>\n      <TitleContainer>\n        <Title>My pets:</Title>\n        <Link to=\"AddPetPage\">\n          <AddPetButton>\n            Add Pet\n            <IconPlusSmall width={24} height={24}>\n              <use href={`${sprite}#icon-plus-small`}></use>\n            </IconPlusSmall>\n          </AddPetButton>\n        </Link>\n      </TitleContainer>\n\n      <PetsList />\n    </PetDataContainer>\n  );\n};\nexport default PetData;\n","import styled from 'styled-components';\n\nexport const UserPageContainer = styled.div`\n  margin-top: 40px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 60px;\n  }\n  @media screen and (min-width: 1280px) {\n    display: flex;\n    align-items: baseline;\n    justify-content: center;\n    gap: 32px;\n  }\n`;\n","import styled from 'styled-components';\nimport { Field } from 'formik';\n\nexport const ProfileInfo = styled.div`\n  position: relative;\n  width: 100%;\n\n  flex-direction: column;\n  justify-content: stretch;\n  align-items: center;\n  padding: 20px 8px 68px 8px;\n  gap: 21px;\n  box-shadow: 3px 8px 14px 0px rgba(136, 198, 253, 0.19);\n  border-radius: 40px;\n  background: var(--unnamed, #fff);\n  margin-bottom: 57px;\n`;\n\nexport const WrapperCard = styled.div`\n  margin-right: 32px;\n`;\n\nexport const ProfileTitle = styled.h2`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.37;\n  letter-spacing: 4%;\n  color: var(--unnamed, #111);\n\n  text-align: left;\n  margin-bottom: 24px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  color: var(--unnamed, #111);\n  font-family: Manrope;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n  letter-spacing: 0.72px;\n  margin-right: 41px;\n  margin-left: 16px;\n`;\nexport const ProfileField = styled(Field)`\n  display: flex;\n  width: 255px;\n  padding: 4px 12px;\n  align-items: center;\n  gap: 191px;\n  border-radius: 20px;\n  border: 1px solid var(--unnamed, #54adff);\n  margin-bottom: 10px;\n  margin-right: 24px;\n  ::placeholder {\n    color: var(--unnamed, #111);\n    font-family: Manrope;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n    letter-spacing: 0.64px;\n  }\n`;\n\nexport const WrapperField = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const ImgAvatar = styled.img`\n  margin: 0 auto;\n`;\n\nexport const AvatarWrapper = styled.div`\n  margin-bottom: 63px;\n`;\nexport const EditButton = styled.button`\n  display: flex;\n  position: absolute;\n  top: 18px;\n  right: 18px;\n\n  background-color: transparent;\n\n  cursor: pointer;\n  justify-content: center;\n  align-items: center;\n  border: none;\n`;\n\nexport const IconEdit = styled.svg`\n  fill: #54adff;\n`;\n\nexport const LogOutBtn = styled.button`\n  display: flex;\n  position: absolute;\n  background-color: transparent;\n  cursor: pointer;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  bottom: 20px;\n  left: 16px;\n`;\n\nexport const IconLogOut = styled.svg`\n  stroke: #54adff;\n  margin-right: 12px;\n`;\n\nexport const LogOutBtnText = styled.span`\n  color: var(--c, #888);\n  font-family: Manrope;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: 0.64px;\n`;\n","import { Formik, Form } from 'formik';\nimport { useState } from 'react';\nimport * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport authSelector from 'redux/auth/authSelector';\nimport Modal from 'components/ModalApproveAction/ModalApproveAction';\n\nimport {\n  ProfileInfo,\n  Label,\n  AvatarWrapper,\n  ProfileTitle,\n  EditButton,\n  ImgAvatar,\n  ProfileField,\n  WrapperCard,\n  WrapperField,\n  IconEdit,\n  IconLogOut,\n  LogOutBtn,\n  LogOutBtnText,\n} from './UserForm.styled';\nimport avatarDefault from '../../images/profilephotos/avatar-default.png';\nimport sprite from '../../images/icons.svg';\nimport authOperations from 'redux/auth/operations';\n\nconst UserForm = () => {\n  const user = useSelector(authSelector.userSelector);\n  const initialValues = {\n    avatarURL: user?.avatarURL || { avatarDefault },\n    name: user?.name || 'Enter your name',\n    email: user?.email || 'example@mail.com',\n    phone: user?.phone || '+380000000000',\n    birthday: user?.birthday || '01.01.2000',\n    city: user?.city || 'Kiev',\n  };\n\n  const dispatch = useDispatch();\n  const onLogout = () => dispatch(authOperations.logoutUser());\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const toggleModal = () => {\n    setIsModalOpen(prevState => !prevState);\n  };\n\n  return (\n    <>\n      <WrapperCard>\n        <ProfileTitle>My information:</ProfileTitle>\n        <ProfileInfo>\n          <EditButton>\n            <IconEdit width={24} height={24}>\n              <use href={`${sprite}#icon-edit-2`}></use>\n            </IconEdit>\n          </EditButton>\n          <Formik initialValues={initialValues}>\n            <Form>\n              <AvatarWrapper>\n                <ImgAvatar src={initialValues.avatarURL} alt=\"avatar\" />\n              </AvatarWrapper>\n              <WrapperField>\n                <Label htmlFor=\"name\"> Name:</Label>\n\n                <ProfileField type=\"text\" name=\"name\" placeholder={initialValues.name} readOnly={true} />\n              </WrapperField>\n              <WrapperField>\n                <Label htmlFor=\"email\"> Email:</Label>\n                <ProfileField type=\"email\" name=\"email\" placeholder={initialValues.email} readOnly={true} />\n              </WrapperField>\n              <WrapperField>\n                <Label htmlFor=\"date\"> Birthday:</Label>\n                <ProfileField type=\"numder\" name=\"birthday\" placeholder={initialValues.birthday} readOnly={true} />\n              </WrapperField>\n              <WrapperField>\n                <Label htmlFor=\"phone\"> Phone:</Label>\n\n                <ProfileField placeholder={initialValues.phone} type=\"phone\" name=\"phone\" readOnly={true} />\n              </WrapperField>\n              <WrapperField>\n                <Label htmlFor=\"city\"> City:</Label>\n                <ProfileField type=\"text\" name=\"city\" placeholder={initialValues.city} readOnly={true} />\n              </WrapperField>\n            </Form>\n          </Formik>\n          <LogOutBtn onClick={toggleModal}>\n            <IconLogOut width={24} height={24}>\n              <use href={`${sprite}#icon-logout`}></use>\n            </IconLogOut>\n            <LogOutBtnText>Log Out</LogOutBtnText>\n          </LogOutBtn>\n\n          {isModalOpen && (\n            <Modal isOpen={isModalOpen} toggleModal={toggleModal} onApprove={onLogout} onRequestClose={toggleModal}>\n              Already leaving?\n            </Modal>\n          )}\n        </ProfileInfo>\n      </WrapperCard>\n    </>\n  );\n};\n\nexport default UserForm;\n","// UserPage\n// \"Компонент рендериться на маршрут /user\n// Компонент рендерить сторінку з компонентами UserData, Logout та PetsData.\n// Компоненти UserData та  Logout потрібно реалізувати в спільному контейнері.\"\tUserPage\n\n// import UserData from '../../components/UserData/UserData';\n// import Logout from '../../components/Logout/Logout';\n\nimport PetsData from '../../components/PetsData/PetsData';\nimport { UserPageContainer } from './UserPage.styled';\nimport UserForm from '../../components/UserForm/UserForm';\n\nconst UserPage = () => {\n  return (\n    <UserPageContainer>\n      <UserForm />\n      {/* <UserData />\n\n      <Logout /> */}\n\n      <PetsData />\n    </UserPageContainer>\n  );\n};\n\nexport default UserPage;\n"],"names":["PetCard","styled","_templateObject","_taggedTemplateLiteral","PetFoto","_templateObject2","PetDesc","_templateObject3","Description","_templateObject4","Subtitle","_templateObject5","DeleteButton","_templateObject6","IconTrash","_templateObject7","_jsxs","children","_jsx","src","width","height","href","concat","sprite","UserPetsList","_Fragment","PetItem","AddPet","Link","IconPlusSmall","to","PetDataContainer","TitleContainer","Title","AddPetButton","PetsList","UserPageContainer","ProfileInfo","WrapperCard","ProfileTitle","Label","ProfileField","Field","WrapperField","ImgAvatar","AvatarWrapper","_templateObject8","EditButton","_templateObject9","IconEdit","_templateObject10","LogOutBtn","_templateObject11","IconLogOut","_templateObject12","LogOutBtnText","_templateObject13","user","useSelector","authSelector","initialValues","avatarURL","avatarDefault","name","email","phone","birthday","city","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","toggleModal","prevState","Formik","Form","alt","htmlFor","type","placeholder","readOnly","onClick","Modal","isOpen","onApprove","authOperations","onRequestClose","UserForm","PetsData"],"sourceRoot":""}