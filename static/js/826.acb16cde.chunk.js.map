{"version":3,"file":"static/js/826.acb16cde.chunk.js","mappings":"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","sources":["components/AddPetButton/AddPetButton.jsx","components/AddPetButton/AddPetButton.styled.js","components/Pagination/Pagination.styled..js","components/Pagination/Pagination.jsx","redux/notices/noticesSelector.js","components/ModalNotice/ModalNotice.styled.js","components/ModalNotice/ModalAttention.styled.js","components/ModalNotice/AuthButtonsModal.styled.js","components/ModalNotice/AuthButtonsModal.jsx","components/ModalNotice/ModalAttention.jsx","components/ModalNotice/ModalNotice.jsx","components/NoticeCategoryItem/NoticeCategoryItem.styled.js","redux/favorite/favoriteSelector.js","components/NoticeCategoryItem/NoticeCategoryItem.jsx","components/NoticesCategoriesList/NoticesCategoriesList.styled.js","components/NoticesCategoriesList/NoticesCategoriesList.jsx","components/NoticesCategoriesNav/NoticesCategoriesNav.styled.js","components/NoticesCategoriesNav/NoticesCategoriesNav.jsx","components/NoticesSearch/NoticesSearch.styled.js","components/NoticesSearch/NoticesSearch.jsx","components/AddPetButton/AddPetButtonSmall.jsx","pages/NoticesPage/NoticesPage.styled.js","pages/NoticesPage/NoticesPage.jsx","../node_modules/@react-hook/latest/dist/module/index.js","../node_modules/@react-hook/debounce/dist/module/index.js","../node_modules/@react-hook/event/dist/module/index.js","../node_modules/@react-hook/window-size/dist/module/index.js"],"sourcesContent":["import sprite from '../../images/icons.svg';\nimport { AddPet, IconPlusSmall } from './AddPetButton.styled';\n\nconst AddPetButton = () => {\n  return (\n    <AddPet to=\"/add-pet\">\n      Add Pet\n      <IconPlusSmall width={24} height={24}>\n        <use href={`${sprite}#icon-plus-small`}></use>\n      </IconPlusSmall>\n    </AddPet>\n  );\n};\n\nexport default AddPetButton;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const AddPet = styled(Link)`\n  background: var(--dark-blue);\n  color: var(--container-bg);\n\n  cursor: pointer;\n\n  display: inline-flex;\n  gap: 8px;\n  align-items: center;\n\n  width: 129px;\n  height: 40px;\n  padding: 9px 16px;\n  border-radius: 40px;\n  border: 2px solid var(--dark-blue);\n\n  font-size: 16px;\n  font-weight: 700;\n  line-height: normal;\n  font-style: normal;\n\n  /* letter-spacing: 0.64px; */\n\n  &:hover,\n  &:focus {\n    background: var(--gradient-blue-bg);\n  }\n`;\n\nexport const AddPetSmall = styled(Link)`\n  position: fixed;\n  z-index: 2;\n  bottom: 61px;\n  right: 20px;\n\n  background: var(--dark-blue);\n  color: var(--container-bg);\n\n  cursor: pointer;\n\n  display: inline-flex;\n  flex-direction: column;\n  gap: 4px;\n  align-items: center;\n\n  width: 80px;\n  height: 80px;\n  padding: 16px;\n  border: 2px solid var(--dark-blue);\n  border-radius: 50%;\n\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n\n  &:hover,\n  &:focus {\n    background: var(--gradient-blue-bg);\n  }\n\n  /* \n  @media screen and (min-width: 768px) {\n    position: ${props => (props.isMobile ? 'relative' : '')};\n    bottom: ${props => (props.isMobile ? '' : '')};\n    left: ${props => (props.isMobile ? '' : '')};\n    margin-left: ${props => (props.isMobile ? '0px' : '')};\n    margin-top: ${props => (props.isMarginT ? '14px' : '')};\n    margin-bottom: ${props => (props.isMobile ? '0px' : '')};\n    height: 44px;\n    display: ${props => (props.isMobile ? 'flex' : 'none')};\n    display: ${props => (props.isDisplay ? 'flex' : 'none')};\n  } */\n`;\n\nexport const IconPlusSmall = styled.svg`\n  stroke: currentColor;\n`;\nexport const IconPlus = styled.svg`\n  stroke: currentColor;\n`;\n","import styled from 'styled-components';\nimport { Pagination as MuiPagination } from '@mui/material';\n\nconst PaginationList = styled(MuiPagination)`\n  display: flex;\n  justify-content: center;\n\n  margin: 40px 0;\n  @media screen and (min-width: 768px) {\n    margin: 30px 0;\n  }\n  @media screen and (min-width: 1280x) {\n    margin: 38px 0;\n  }\n`;\n\nexport { PaginationList };\n","import React from 'react';\nimport { PaginationList } from './Pagination.styled.';\n\nconst Pagination = ({ page, count, onChange }) => {\n  return <PaginationList page={page} count={count} variant=\"outlined\" onChange={onChange} />;\n};\n\nexport default Pagination;\n","const selectNotices = state => state.notices;\nconst selectNoticesError = state => state.notices.error;\n\nconst noticesSelector = {\n  selectNotices,\n  selectNoticesError,\n};\n\nexport default noticesSelector;\n","import styled from 'styled-components';\n\nconst stylesBtnActive = {\n  lightblue: \"var(--lightblue)\",\n  darkblue: \"var(--dark-blue)\",\n  white: \"var(--main-light-color)\",\n};\n\nexport const Background = styled.div`\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(97, 97, 97, 0.60);\n  backdrop-filter: blur(4px); \n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 9999;\n`;\n\nexport const ModalWrapper = styled.div`\n  width: 280px;\n  background: var(--main-light-color);\n  border-radius: 20px;\n  position: relative;\n\n  @media screen and (min-width: 768px) {\n    width: 681px;\n    border-radius: 40px;\n  }\n\n`;\n\nexport const ModalContent = styled.div`\n  padding: 44px 12px 16px 12px;\n\n  span {\n    display: flex;\n  }\n  \n  @media screen and (min-width: 768px) {\n    padding: 32px 32px 24px 32px;\n  }\n\n`;\n\nexport const ModalInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  margin-bottom: 12px; \n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    margin-bottom: 28px;\n  }\n`;\n\nexport const ModalImg = styled.div`\n  position: relative;\n  width: 262px;\n  height: 298px;\n  left: 50%;\n  transform: translate(-50%) scale(1);\n\n  @media screen and (min-width: 768px) {\n    left:0;\n    transform: translate(0) scale(1);\n  }\n`;\n\nexport const ModalAvatar = styled.img`\n  width: 262px;\n  height: 298px;\n  border-radius: 0px 0px 40px 40px;\n`;\n\nexport const ModalCategory = styled.p`\n  position: absolute;\n  top: 16px;\n  left: 0;\n  width: 126px;\n  height: 32px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: var(--lightblue);\n  color: #111;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  border-bottom-right-radius: 50px;\n  border-top-right-radius: 50px;  \n`;\n\nexport const ModalHeader = styled.h2`\n  color: #000;\n  font-size: 24px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: normal;\n  letter-spacing: -0.24px;\n  margin-bottom: 20px;\n  \n  @media screen and (min-width: 768px) {\n    font-size: 28px;\n    letter-spacing: -0.28px;\n  }\n`;\n\nexport const ModalInfoList = styled.div`\n  display: flex;\n  gap: 20px;\n\n  @media screen and (min-width: 768px) {\n    gap: 51px;\n  }\n`;\n\nexport const ModalInfoItemName = styled.ul`\n  display: flex;\n  flex-direction: column;\n  vertical-align: middle;\n  gap: 8px;\n  font-size: 14px;\n  font-style: normal;\n  line-height: normal;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const ModalInfoItemValue = styled.ul`\n  display: flex;\n  flex-direction: column;\n  vertical-align: middle;\n  gap: 10px;\n  font-size: 12px;\n  font-weight: 500;\n  font-style: normal;\n  line-height: normal;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    gap: 8px;\n  }\n`;\n\nexport const ModalContact = styled.li`\n  color: var(--accent-color);\n  font-weight: 500;\n\n  a {\n    border-bottom: 1px solid var(--accent-color); \n  }\n`;\n\nexport const ModalComments = styled.p`\n  color: var(--main-color);\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: 0.56px;\n  margin-bottom: 12px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 24px;\n    letter-spacing: 0.64px;\n    margin-bottom: 70px; \n  }\n`;\n\nexport const ModalButtons = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 8px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row-reverse;\n    justify-content: end;\n    gap: 17px;\n  }\n`;\n\n\nexport const ModalPhone = styled.a`\n  display: flex;\n  width: 256px;\n  padding: 8px 20px;\n  justify-content: center;\n  align-items: center;\n  color: var(--dark-blue);\n  background: transparent;\n  border: 2px solid var(--dark-blue);\n  border-radius: 40px; \n  font-size: 16px;\n  font-family: inherit;\n  font-weight: 700;  \n  line-height: normal;\n  letter-spacing: 0.64px;\n\n  &:hover {\n    background: var(--dark-blue, linear-gradient(315deg, #419EF1 0%, #9BD0FF 100%)); \n    color: var(--main-light-color);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 129px;\n  }\n`\n\nexport const ModalButtonAdd = styled.button`\n  display: flex;\n  gap: 6px;\n  width: 256px;\n  padding: 8px 20px;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  color: ${(props) => (props.isSelected && props.isLoggedIn ? stylesBtnActive.darkblue : stylesBtnActive.white)};\n  background: ${(props) => (props.isSelected && props.isLoggedIn ? stylesBtnActive.lightblue : stylesBtnActive.darkblue)};\n  border: none;\n  border-radius: 40px; \n  font-size: 16px;\n  font-family: inherit;\n  font-weight: 700;  \n  line-height: normal;\n  letter-spacing: 0.64px;\n  \n  @media screen and (min-width: 768px) {\n    width: 129px;\n  }\n`\n\nexport const CloseModalButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: transparent;\n  background: transparent;\n  position: absolute;\n  top: 12px;\n  right: 12px;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  z-index: 10;\n  border-radius: 50%;\n\n  &:hover {\n    background: var(--lightblue);\n  }\n\n  @media screen and (min-width: 768px) {\n    top: 23px;\n    right: 26px;\n  }\n`;\n\nexport const IconHeart = styled.svg`\n  stroke: ${(props) => (props.isSelected && props.isLoggedIn ? stylesBtnActive.darkblue : stylesBtnActive.white)};\n  fill: ${(props) => (props.isSelected && props.isLoggedIn? stylesBtnActive.darkblue : \"transparent\")};\n\n`;\n\n\nexport const IconCross = styled.svg`\n  stroke: var(--dark-blue);\n`;","import styled from 'styled-components';\n\nexport const ModalWrapper = styled.div`\n  width: 280px;\n  height: 445px;\n  position: relative;\n  padding: 60px 20px;\n  background: var(--main-light-color);\n  color: #000;\n  border-radius: 20px;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    width: 608px;\n    height: 429px;\n    border-radius: 40px;\n    padding: 60px 40px;\n  }\n`;\n\nexport const ModalHeader = styled.h2`\n  color: var(--main-color);\n  font-size: 24px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: 0.96px; \n  margin-bottom: 20px; \n\n  @media screen and (min-width: 768px) {\n    font-size: 36px;\n    letter-spacing: 1.44px; \n  }\n`;\n\nexport const ModalText = styled.p`\n  color: var(--main-color);\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 18px;\n  letter-spacing: 0.56px; \n  margin-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n    line-height: 28px;\n    letter-spacing: 0.8px; \n  }\n`;\n\nexport const ModalAuth = styled.div`\n  position: absolute;\n  left: 50%;\n  transform: translate(-50%) scale(1);\n`;\n\nexport const CloseModalButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: transparent;\n  background: transparent;\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  z-index: 10;\n  border-radius: 50%;\n\n  \n  &:hover {\n    background: var(--lightblue);\n  }\n\n  @media screen and (min-width: 768px) {\n    top: 24px;\n    right: 24px;\n  }\n`;","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Nav = styled.nav`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    gap: 20px;\n  }\n\n`;\n\nexport const LoginButton = styled(NavLink)`\n  border-radius: 40px;\n  background: var(--accent-color);\n  cursor: pointer;\n  display: flex;\n  height: 40px;\n  width: 240px;\n  align-items: center;\n  justify-content: center;\n  transition: all ease-in-out 0.2s;\n  color: var(--bg-color);\n  margin-bottom: 12px;\n\n  &:hover {\n    background: var(--main-light-color);\n    color: var(--accent-color);\n    fill: var(--accent-color);\n    border: 2px solid var(--accent-color);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 165px;\n    margin-bottom: 0;\n  }\n\n`;\n\nexport const ButtonText = styled.p`\n  margin-right: 8px;\n  font-weight: 700;\n  font-style: normal;\n  line-height: normal;\n  letter-spacing: 0.64px;\n`;\n\nexport const RegisterButton = styled(NavLink)`\n  display: flex;\n  border-radius: 40px;\n  background: transparent;\n  border: 2px solid var(--accent-color);\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  height: 40px;\n  width: 240px;\n  color: var(--accent-color);\n  transition: all ease-in-out 0.2s;\n\n  &:hover {\n    background: var(--accent-color);\n    color: var(--bg-color);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 165px;\n  }\n\n`;\n\nexport const IconPawPrint = styled.svg`\n  fill: currentColor;\n`;\n\n","import { Nav, ButtonText, LoginButton, RegisterButton, IconPawPrint} from './AuthButtonsModal.styled';\nimport sprite from '../../images/icons.svg';\n\n\nconst AuthButtonsModal = ({ toggleMenu}) => {\n  return (\n    <>\n      <Nav>\n        <LoginButton to=\"/login\" onClick={() => toggleMenu()}>\n          <ButtonText color=\"login\" margin=\"8px\" weight=\"bold\">\n            Log IN\n          </ButtonText>\n          <IconPawPrint width={24} height={24}>\n            <use href={`${sprite}#icon-pawprint-1`}></use>\n          </IconPawPrint>\n        </LoginButton>\n        <RegisterButton to=\"/register\" onClick={() => toggleMenu()}>\n          <ButtonText color=\"register\" weight=\"semi-bold\">\n            Registration\n          </ButtonText>\n        </RegisterButton>\n      </Nav>\n    </>\n  );\n};\n\nexport default AuthButtonsModal;\n","import React, { useEffect} from 'react';\nimport { Background, IconCross } from './ModalNotice.styled';\nimport { ModalWrapper, ModalHeader, ModalText, ModalAuth, CloseModalButton } from './ModalAttention.styled';\nimport sprite from '../../images/icons.svg';\nimport  AuthButtonsModal  from './AuthButtonsModal';\n\nconst ModalAttention = ({onClose}) => {\n\n  useEffect(() => {\n    \n    const handleKeyDown = e => {\n      if(e.code === 'Escape') {\n        onClose();\n      }\n    }\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n\n  }, [onClose])\n  \n  const handleBackDropClick = e => {\n    if(e.target === e.currentTarget) {\n      onClose();\n    }\n  }\n\n  return (\n    <>\n      <Background onClick={handleBackDropClick}>\n        <ModalWrapper>\n          <ModalHeader>Attention</ModalHeader>\n          <ModalText>We would like to remind you that certain functionality is available only to authorized users.If you have an account, please log in with your credentials. If you do not already have an account, you must register to access these features.</ModalText>\n          <ModalAuth>\n              <AuthButtonsModal />\n          </ModalAuth>\n          <CloseModalButton \n            aria-label='Close modal'\n            onClick={() => onClose(prev => !prev)}\n            >\n              <IconCross width={24} height={24}>\n                <use href={`${sprite}#icon-cross`}></use>\n              </IconCross>\n          </CloseModalButton>  \n        </ModalWrapper>\n      </Background>\n    \n    </>\n  )\n}\n\nexport default ModalAttention;","import React, { useRef, useEffect, useCallback } from 'react';\nimport {Background , ModalWrapper, ModalContent, ModalInfo, ModalImg, ModalAvatar, ModalCategory, ModalHeader, ModalInfoList, ModalInfoItemName, ModalInfoItemValue, ModalContact, ModalComments, ModalButtons, ModalPhone, ModalButtonAdd, CloseModalButton,  IconHeart, IconCross} from './ModalNotice.styled';\nimport ModalAttention from './ModalAttention';\nimport sprite from '../../images/icons.svg';\n\nexport const ModalNotice = ({showModal, setShowModal,  handleAddToFavorite, favoriteNoticeStore, isLoggedIn, isModalOpenAttention, closeModalAttention, isSelected}) => {\n\n  const modalRef = useRef();\n\n  const closeModal = e => {\n    if (modalRef.current === e.target) {\n      setShowModal(false);\n    }\n  };\n\n  const keyPress = useCallback(\n    e => {\n      if (e.key === 'Escape' && showModal) {\n        setShowModal(false);\n        console.log('I pressed');\n      }\n    },\n    [setShowModal, showModal]\n  );\n\n  useEffect(\n    () => {\n      document.addEventListener('keydown', keyPress);\n      return () => document.removeEventListener('keydown', keyPress);\n    },\n    [keyPress]\n  );\n  \n  const { notice, user } = favoriteNoticeStore;\n\n  return (\n    <>\n      {showModal && notice ? (\n        <Background onClick={closeModal} ref={modalRef}>\n          <ModalWrapper>\n              <ModalContent>\n                <ModalInfo>\n                  <ModalImg>\n                    <ModalAvatar src={notice.avatarURL} alt={notice.name} />\n                    <ModalCategory>{notice.category}</ModalCategory>\n                  </ModalImg>\n                  \n                  <div>\n                    <ModalHeader>{notice.title || \"Сute pet looking for a home\"}</ModalHeader>\n                    <ModalInfoList>\n                    <ModalInfoItemName>\n                      <li><strong>Name:</strong></li>\n                      <li><strong>Birthday:</strong></li>\n                      <li><strong>Type:</strong></li>\n                      <li><strong>Place:</strong></li>\n                      <li><strong>The sex:</strong></li>\n                      <li><strong>Email:</strong></li>\n                      <li><strong>Phone:</strong></li>\n                    </ModalInfoItemName>\n\n                    <ModalInfoItemValue>\n                      <li>{notice.name || \"empty\"}</li>\n                      <li>{notice.birthday || \"empty\"}</li>\n                      <li>{notice.type || \"empty\"}</li>\n                      <li>{notice.location || \"empty\"}</li>\n                      <li>{notice.sex || \"empty\"}</li>\n                      <ModalContact>\n                        <a href={`mailto: ${user.email}`}>{user.email || \"email@gamil.com\"}</a>\n                      </ModalContact>\n                      <ModalContact>\n                        <a href={`tel: ${user.phone}`}>{user.phone || \"+380 (XXX) (XXXXXXXX)\"}</a>\n                      </ModalContact>\n                    </ModalInfoItemValue>\n                    </ModalInfoList>\n                  </div>\n                </ModalInfo>\n\n                <ModalComments><strong>Comments:</strong> {notice.comments}</ModalComments>\n\n                <ModalButtons>\n                  <ModalPhone href={`tel: ${user.phone}`}>Contact</ModalPhone>\n\n                  <ModalButtonAdd onClick={handleAddToFavorite} isSelected = {isSelected} isLoggedIn = {isLoggedIn}><span>{isSelected && isLoggedIn ? \"Delete\" : \"Add\"}</span> <span>  \n                  <IconHeart width={24} height={24} isSelected = {isSelected} isLoggedIn = {isLoggedIn}>\n                    <use href={`${sprite}#icon-heart`}></use>\n                  </IconHeart>\n                  </span>\n                  </ModalButtonAdd>\n\n                </ModalButtons>\n              </ModalContent>\n              <CloseModalButton\n                aria-label='Close modal'\n                onClick={() => setShowModal(prev => !prev)}\n              >\n                <IconCross width={24} height={24}>\n                  <use href={`${sprite}#icon-cross`}></use>\n                </IconCross>\n              </CloseModalButton>\n          </ModalWrapper>          \n        </Background>\n      ) : null}\n      {isModalOpenAttention ? (<ModalAttention onClose={closeModalAttention}/>) : null}\n    </>\n    \n  );\n};\n","import styled from 'styled-components';\n\nconst heartActive = {\n  lightblue: 'var(--lightblue)',\n  darkblue: 'var(--dark-blue)',\n};\n\nconst NoticesItemThumb = styled.div`\n  position: relative;\n`;\nconst Img = styled.img`\n  width: 100%;\n  height: 288px;\n`;\nconst CategoriesAndFilterContainer = styled.div``;\n\nconst CategoriesContainer = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: var(--lightblue);\n  padding: 10px 16px;\n  height: 36px;\n  border-top-right-radius: 16px;\n  border-bottom-right-radius: 16px;\n  top: 16px;\n`;\n\nconst CategoriesName = styled.span`\n  font-size: 14px;\n  font-weight: 500;\n`;\n\nconst DiscriptionList = styled.ul`\n  position: absolute;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 100%;\n  bottom: 12px;\n  @media screen and (min-width: 768px) {\n    justify-content: space-evenly;\n  }\n`;\n\nconst DiscriptionItem = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 80px;\n  height: 28px;\n  padding: 0 5px;\n  border-radius: 16px;\n  background-color: var(--lightblue);\n`;\nconst TextContainer = styled.div`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nconst IconConatiner = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst IconSvg = styled.svg`\n  fill: var(--lightblue);\n  stroke: var(--dark-blue);\n`;\n\nconst IconDelete = styled.svg`\n  fill: var(--lightblue);\n  stroke: var(--dark-blue);\n`;\n\nconst IconHeart = styled.svg`\n  fill: ${props => (props.isSelected && props.isLoggedIn ? heartActive.darkblue : heartActive.lightblue)};\n  stroke: var(--dark-blue);\n`;\n\nconst BtnContainer = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n  border-radius: 50%;\n  top: 12px;\n  right: 12px;\n`;\n\nconst FavoriteBtnContainer = styled.div`\n  display: flex;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: var(--lightblue);\n`;\n\nconst AddToFavoriteBtn = styled.button`\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  width: 100%;\n  border-radius: 50%;\n  background-color: var(--lightblue);\n  padding: 0;\n  &:hover ${IconHeart} {\n    fill: var(--dark-blue);\n  }\n`;\n\nconst DeleteBtn = styled.button`\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  width: 100%;\n  border-radius: 50%;\n  background-color: var(--lightblue);\n  padding: 0;\n  &:hover ${IconDelete}, :focus ${IconDelete} {\n    fill: var(--main-light-color);\n    stroke: var(--dark-blue);\n  }\n`;\n\n// const AddPet = styled(Link)`\n//   position: absolute;\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n//   border-radius: 50%;\n//   background: var(--dark-blue);\n//   border: 2px solid var(--dark-blue);\n//   color: var(--container-bg);\n//   cursor: pointer;\n//   display: inline-flex;\n//   width: 80px;\n//   height: 80px;\n//   padding: 17px 16px;\n//   gap: 4px;\n//   font-size: 12px;\n//   right: 0;\n//   bottom: 60px;\n\n//   &:hover,\n//   &:focus {\n//     background: var(--gradient-blue-bg);\n//     border: var(--gradient-blue-bg);\n//   }\n// `;\n\n// const IconPlusSmall = styled.svg`\n//   stroke: var(--main-light-color);\n// `;\nconst ContentContainer = styled.div`\n  padding: 0 16px;\n`;\n\nconst Title = styled.h3`\n  font-family: Manrope;\n  font-size: 24px;\n  font-weight: 700;\n\n  margin: 20px;\n`;\n\nconst LearnMoreBtn = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  height: 38px;\n  padding: 9px 0;\n  border-radius: 40px;\n  border: 2px solid var(--dark-blue);\n  background-color: inherit;\n\n  color: var(--dark-blue);\n  font-family: Manrope;\n  font-size: 16px;\n  font-weight: 700;\n  letter-spacing: 0.64px;\n  cursor: pointer;\n\n  &:hover {\n    color: white;\n    background: linear-gradient(315deg, #419ef1 0%, #9bd0ff 100%);\n    border: none;\n  }\n`;\n\nconst InfoTitle = styled.h3`\n  color: var(--main-color);\n\n  font-size: 24px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: normal;\n  letter-spacing: 0.96px;\n\n  margin-bottom: 14px;\n\n  @media screen and (min-width: 768px) {\n    color: #000;\n    font-size: 28px;\n    letter-spacing: -0.28px;\n\n    margin-bottom: 40px;\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\n\nconst InfoDesc = styled.p`\n  width: 240px;\n\n  color: var(--main-color);\n\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.14px;\n\n  margin-left: auto;\n  margin-right: auto;\n\n  @media screen and (min-width: 768px) {\n    width: 393px;\n    color: #000;\n\n    font-size: 16px;\n    letter-spacing: -0.16px;\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\n\nconst Subtitle = styled.span`\n  font-weight: 700;\n\n  @media screen and (min-width: 768px) {\n    font-weight: 600;\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\n\nexport {\n  NoticesItemThumb,\n  Img,\n  CategoriesAndFilterContainer,\n  CategoriesName,\n  CategoriesContainer,\n  DiscriptionList,\n  DiscriptionItem,\n  TextContainer,\n  IconSvg,\n  IconDelete,\n  IconHeart,\n  IconConatiner,\n  BtnContainer,\n  FavoriteBtnContainer,\n  AddToFavoriteBtn,\n  DeleteBtn,\n  ContentContainer,\n  Title,\n  LearnMoreBtn,\n  InfoTitle,\n  InfoDesc,\n  Subtitle,\n};\n","const getNotice = state => state.favorite.items;\n\nexport default getNotice;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport React, { useState } from 'react';\nimport { ModalNotice } from '../ModalNotice/ModalNotice';\nimport ModalApproveAction from 'components/ModalApproveAction/ModalApproveAction';\nimport {\n  CategoriesContainer,\n  CategoriesName,\n  NoticesItemThumb,\n  DiscriptionList,\n  DiscriptionItem,\n  IconSvg,\n  IconConatiner,\n  AddToFavoriteBtn,\n  FavoriteBtnContainer,\n  BtnContainer,\n  Img,\n  TextContainer,\n  Title,\n  LearnMoreBtn,\n  ContentContainer,\n  IconHeart,\n  IconDelete,\n  DeleteBtn,\n  InfoTitle,\n  InfoDesc,\n  Subtitle,\n} from './NoticeCategoryItem.styled';\nimport sprite from '../../images/icons.svg';\nimport favoriteOperations from '../../redux/favorite/favoriteOperations';\nimport getNotice from '../../redux/favorite/favoriteSelector';\nimport noticesOperations from 'redux/notices/operation';\nimport authSelector from '../../redux/auth/authSelector';\n\nconst NoticeCategoryItem = ({ notices }) => {\n  const dispatch = useDispatch();\n  const favoriteNoticeStore = useSelector(getNotice);\n\n  console.log(favoriteNoticeStore);\n\n  const { _id, title, birthday, category, location, sex, avatarURL } = notices;\n  const { categoryName } = useParams();\n\n  const [idPet, setIdPet] = useState('');\n\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n\n  const [showModal, setShowModal] = useState(false);\n  const [isModalOpenAttention, setIsModalOpenAttention] = useState(false);\n  const [isSelected, setIsSelected] = useState(() => {\n    const saved = localStorage.getItem(`pet_${_id}`);\n    const initialValue = JSON.parse(saved);\n    return initialValue || false;\n  });\n\n  const isLoggedIn = useSelector(authSelector.loggedInSelector);\n\n  const onDelete = () => {\n    dispatch(noticesOperations.deleteUserNotice(_id));\n    setShowDeleteModal(showDeleteModal => !showDeleteModal);\n    setIdPet(_id);\n  };\n\n  const openModal = () => {\n    dispatch(favoriteOperations.fetchModalDetails(_id));\n    setShowModal(showModal => !showModal);\n  };\n\n  const openModalForDelete = () => {\n    setShowDeleteModal(showDeleteModal => !showDeleteModal);\n  };\n\n  const givenDate = new Date(birthday);\n  const currentDate = new Date();\n  const timeDiff = currentDate - givenDate;\n  const millisecondsPerYear = 1000 * 60 * 60 * 24 * 365.25;\n  const yearsDiff = Math.floor(timeDiff / millisecondsPerYear);\n\n  const closeModalAttention = () => {\n    setIsModalOpenAttention(!isModalOpenAttention);\n  };\n\n  const handleAddToFavorite = () => {\n    const addToFavoriteValue = {\n      _id,\n      favoriteNoticeStore,\n    };\n\n    if (isLoggedIn) {\n      if (!isSelected) {\n        dispatch(favoriteOperations.fetchAddToFavorite(addToFavoriteValue));\n        setIsSelected(!isSelected);\n      } else {\n        dispatch(favoriteOperations.fetchDeleteToFavorite(_id));\n        setIsSelected(!isSelected);\n      }\n    } else {\n      setShowModal(false);\n      setIsModalOpenAttention(true);\n    }\n  };\n\n  localStorage.setItem(`pet_${_id}`, JSON.stringify(isSelected));\n\n  return (\n    <>\n      <NoticesItemThumb>\n        <Img src={avatarURL} alt=\"pets avatar\" width={280} height={290} />\n        <CategoriesContainer>\n          {category !== 'for-free' ? (\n            <CategoriesName>{category}</CategoriesName>\n          ) : (\n            <CategoriesName>in goood hands</CategoriesName>\n          )}\n        </CategoriesContainer>\n        <DiscriptionList>\n          <DiscriptionItem>\n            <IconConatiner>\n              <IconSvg width={24} height={24}>\n                <use href={`${sprite}#icon-location-1`}></use>\n              </IconSvg>\n            </IconConatiner>\n            <TextContainer>{location}</TextContainer>\n          </DiscriptionItem>\n          {yearsDiff === 1 || yearsDiff === 0 ? (\n            <DiscriptionItem>\n              <IconConatiner>\n                <IconSvg width={24} height={24}>\n                  <use href={`${sprite}#icon-clock`}></use>\n                </IconSvg>\n              </IconConatiner>\n              <TextContainer>{`${yearsDiff} year`}</TextContainer>\n            </DiscriptionItem>\n          ) : (\n            <DiscriptionItem>\n              <IconConatiner>\n                <IconSvg width={24} height={24}>\n                  <use href={`${sprite}#icon-clock`}></use>\n                </IconSvg>\n              </IconConatiner>\n              <TextContainer>{`${yearsDiff} years`}</TextContainer>\n            </DiscriptionItem>\n          )}\n          <DiscriptionItem>\n            <IconConatiner>\n              <IconSvg width={24} height={24}>\n                {sex === 'male' ? <use href={`${sprite}#icon-male`}></use> : <use href={`${sprite}#icon-female`}></use>}\n              </IconSvg>\n            </IconConatiner>\n            <TextContainer>{sex}</TextContainer>\n          </DiscriptionItem>\n        </DiscriptionList>\n        <BtnContainer>\n          <FavoriteBtnContainer>\n            <AddToFavoriteBtn type=\"button\" onClick={handleAddToFavorite}>\n              <IconHeart width={24} height={24} isSelected = {isSelected} isLoggedIn = {isLoggedIn}>\n                <use href={`${sprite}#icon-heart`}></use>\n              </IconHeart>\n            </AddToFavoriteBtn>\n          </FavoriteBtnContainer>\n          {categoryName === 'own' && (\n            <FavoriteBtnContainer>\n              <DeleteBtn type=\"button\" onClick={openModalForDelete}>\n                <IconDelete width={24} height={24}>\n                  <use href={`${sprite}#icon-trash-2`}></use>\n                </IconDelete>\n              </DeleteBtn>\n            </FavoriteBtnContainer>\n          )}\n        </BtnContainer>\n      </NoticesItemThumb>\n      <ContentContainer>\n        <Title>{title}</Title>\n        <LearnMoreBtn type=\"button\" onClick={openModal}>\n          Learn more\n        </LearnMoreBtn>\n      </ContentContainer>\n      <ModalNotice\n        showModal={showModal}\n        setShowModal={setShowModal}\n        handleAddToFavorite={handleAddToFavorite}\n        idPetAd={_id}\n        favoriteNoticeStore={favoriteNoticeStore}\n        isLoggedIn={isLoggedIn}\n        isModalOpenAttention={isModalOpenAttention}\n        closeModalAttention={closeModalAttention}\n        isSelected = {isSelected}\n      />\n      {showDeleteModal && (\n        <ModalApproveAction\n          isOpen={showDeleteModal}\n          onRequestClose={openModalForDelete}\n          onApprove={onDelete}\n          idCard={idPet}\n          btnIconColor={'var(--bg-color)'}\n          btnIconName={'icon-trash-2'}\n        >\n          <InfoTitle> Delete your pet?</InfoTitle>\n          <InfoDesc>\n            Are you sure you want to delete pet <Subtitle>{title}</Subtitle>?\n          </InfoDesc>\n          <InfoDesc>You can`t undo this action.</InfoDesc>\n        </ModalApproveAction>\n      )}\n    </>\n  );\n};\n\nexport default NoticeCategoryItem;\n","import styled from 'styled-components';\n\nconst List = styled.ul`\n  list-style: none;\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: start;\n    margin: -16px -16px;\n  }\n  @media screen and (min-width: 1280px) {\n  }\n`;\nconst Item = styled.li`\n  width: 280px;\n\n  padding-bottom: 20px;\n  margin-bottom: 24px;\n  margin-right: auto;\n  margin-left: auto;\n\n  border-radius: 0px 0px 40px 40px;\n  background: var(--main-light-color);\n  box-shadow: 3px 8px 14px 0px rgba(136, 198, 253, 0.19);\n\n  @media screen and (min-width: 768px) {\n    width: 336px;\n    margin: 16px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 288px;\n  }\n`;\nexport { List, Item };\n","import NoticeCategoryItem from 'components/NoticeCategoryItem/NoticeCategoryItem';\nimport { Item, List } from './NoticesCategoriesList.styled';\n\nconst NoticesCategoriesList = ({ notices }) => {\n  return (\n    <div>\n      {notices && (\n        <List>\n          {notices.map(({ _id, comments, title, birthday, category, location, name, owner, sex, type, avatarURL }) => {\n            return (\n              <Item key={_id}>\n                <NoticeCategoryItem\n                  notices={{\n                    _id,\n                    comments,\n                    title,\n                    birthday,\n                    category,\n                    location,\n                    name,\n                    owner,\n                    sex,\n                    type,\n                    avatarURL,\n                  }}\n                />\n              </Item>\n            );\n          })}\n        </List>\n      )}\n    </div>\n  );\n};\n\nexport default NoticesCategoriesList;\n\n// <div>\n//   {!resByCategory ? (\n//     <Navigate to=\"*\" />\n//   ) : (\n//     <ul>\n//       {resByCategory.map(({ _id, comments, title, birthday, category, location, name, owner, sex, type }) => {\n//         return (\n//           <li key={_id}>\n//             <NoticeCategoryItem\n//               responseByCategory={{ _id, comments, title, birthday, category, location, name, owner, sex, type }}\n//             />\n//           </li>\n//         );\n//       })}\n//     </ul>\n//   )}\n// </div>;\n\n// <div>\n//   {resByCategory && (\n//     <ul>\n//       {resByCategory.map(({ _id, comments, title, birthday, category, location, name, owner, sex, type }) => {\n//         return (\n//           <li key={_id}>\n//             <NoticeCategoryItem\n//               responseByCategory={{ _id, comments, title, birthday, category, location, name, owner, sex, type }}\n//             />\n//           </li>\n//         );\n//       })}\n//     </ul>\n//   )}\n// </div>;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst CategoriesNavContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  width: 200px;\n  margin-bottom: 24px;\n  margin-right: auto;\n  @media screen and (min-width: 768px) {\n    width: 320px;\n    height: 82px;\n    gap: 12px;\n    margin-bottom: 40px;\n  }\n  @media screen and (min-width: 1280px) {\n    height: auto;\n    width: 520px;\n    margin-bottom: 42px;\n  }\n`;\n\nconst CategoriesLink = styled(NavLink)`\n  height: 35px;\n  font-size: 14px;\n  padding: 8px 16px;\n  border-radius: 40px;\n  color: var(--dark-blue);\n  background-color: var(--lightblue);\n  &.active {\n    color: var(--bg-color);\n    background-color: var(--dark-blue);\n  }\n`;\n\nexport { CategoriesNavContainer, CategoriesLink };\n","import { useSelector } from 'react-redux';\nimport authSelector from 'redux/auth/authSelector';\nimport { CategoriesNavContainer, CategoriesLink } from './NoticesCategoriesNav.styled';\n\nconst NoticesCategoriesNav = () => {\n  const isLogged = useSelector(authSelector.loggedInSelector);\n\n  return (\n    <CategoriesNavContainer>\n      <CategoriesLink to=\"/notices/sell\">sell</CategoriesLink>\n      <CategoriesLink to=\"/notices/lost-found\">lost/found</CategoriesLink>\n      <CategoriesLink to=\"/notices/for-free\">in good hands</CategoriesLink>\n      {isLogged && <CategoriesLink to=\"/notices/favorite\">favorite ads</CategoriesLink>}\n      {isLogged && <CategoriesLink to=\"/notices/own\">my ads</CategoriesLink>}\n    </CategoriesNavContainer>\n  );\n};\n\nexport default NoticesCategoriesNav;\n","import styled from 'styled-components';\n\nconst SearchContainer = styled.div`\n  width: 100%;\n  margin-bottom: 20px;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 40px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-bottom: 42px;\n  }\n`;\n\nconst SearchForm = styled.form`\n  position: relative;\n  display: flex;\n  justify-content: center;\n`;\n\nconst SearchInput = styled.input`\n  font-size: 14px;\n  border: none;\n  padding-left: 20px;\n  width: 100%;\n  height: 44px;\n  border-radius: 24px;\n  box-shadow: 3px 8px 14px 0px rgba(136, 198, 253, 0.2);\n  @media screen and (min-width: 768px) {\n    max-width: 608px;\n  }\n`;\n\nconst SearchIconContainer = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 24px;\n  height: 24px;\n  bottom: 10px;\n  right: 10px;\n  @media screen and (min-width: 768px) {\n    right: 66px;\n  }\n  @media screen and (min-width: 1280px) {\n    right: 336px;\n  }\n`;\n\nconst SearchIconBtn = styled.button`\n  border: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0;\n  width: 100%;\n  height: 100%;\n  background-color: transparent;\n  cursor: pointer;\n`;\n\nconst IconSvg = styled.svg`\n  fill: var(--dark-blue);\n`;\n\nconst IconCrossSmall = styled.svg`\n  stroke: var(--accent-color);\n`;\n\nexport { SearchContainer, SearchForm, SearchInput, SearchIconContainer, SearchIconBtn, IconSvg, IconCrossSmall };\n","import { useState } from 'react';\nimport {\n  SearchContainer,\n  SearchForm,\n  SearchInput,\n  SearchIconContainer,\n  SearchIconBtn,\n  IconSvg,\n  IconCrossSmall,\n} from './NoticesSearch.styled';\nimport sprite from '../../images/icons.svg';\n\nconst NoticesSearch = ({ pattern, onSubmit, onClear }) => {\n  const [inputName, setInputName] = useState(pattern ?? '');\n\n  const hangleNameOnChange = event => {\n    setInputName(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (inputName.trim() === '') {\n      return;\n    }\n    onSubmit(inputName);\n  };\n\n  const handleClear = () => {\n    setInputName('');\n    onClear();\n  };\n\n  return (\n    <SearchContainer>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchInput\n          type=\"text\"\n          name=\"searchforcategory\"\n          placeholder=\"Search\"\n          value={inputName}\n          onChange={hangleNameOnChange}\n          autoComplete=\"off\"\n        />\n        <SearchIconContainer>\n          <SearchIconBtn type=\"submit\">\n            <IconSvg width={24} height={24}>\n              <use href={`${sprite}#icon-search`}></use>\n            </IconSvg>\n          </SearchIconBtn>\n          {inputName.trim() !== '' && (\n            <SearchIconBtn type=\"button\" onClick={handleClear}>\n              <IconCrossSmall width={24} height={24}>\n                <use href={`${sprite}#icon-cross-small`}></use>\n              </IconCrossSmall>\n            </SearchIconBtn>\n          )}\n        </SearchIconContainer>\n      </SearchForm>\n    </SearchContainer>\n  );\n};\n\nexport default NoticesSearch;\n","import sprite from '../../images/icons.svg';\nimport { AddPetSmall, IconPlus } from './AddPetButton.styled';\n\nconst AddPetButtonSmall = () => {\n  return (\n    <AddPetSmall to=\"/add-pet\">\n      <IconPlus width={24} height={24}>\n        <use href={`${sprite}#icon-plus`}></use>\n      </IconPlus>\n      Add Pet\n    </AddPetSmall>\n  );\n};\nexport default AddPetButtonSmall;\n","import styled from 'styled-components';\n\nconst NoticesPageContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    margin-top: 80px;\n  }\n`;\n\nconst Title = styled.h2`\n  display: flex;\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 24px;\n\n  font-size: 24px;\n  text-align: center;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 40px;\n\n    font-size: 48px;\n  }\n`;\nconst ButtonsBox = styled.div`\n  display: flex;\n  align-items: baseline;\n`;\n\nexport { NoticesPageContainer, Title, ButtonsBox };\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useWindowWidth } from '@react-hook/window-size';\nimport noticesSelector from 'redux/notices/noticesSelector';\nimport authSelector from 'redux/auth/authSelector';\nimport noticesOperations from 'redux/notices/operation';\n\nimport NoticesCategoriesList from 'components/NoticesCategoriesList/NoticesCategoriesList';\nimport NoticesCategoriesNav from 'components/NoticesCategoriesNav/NoticesCategoriesNav';\nimport NoticesSearch from 'components/NoticesSearch/NoticesSearch';\nimport Pagination from '../../components/Pagination/Pagination';\nimport AddPetButton from 'components/AddPetButton/AddPetButton';\nimport AddPetButtonSmall from 'components/AddPetButton/AddPetButtonSmall';\n\nimport { ButtonsBox, NoticesPageContainer, Title } from './NoticesPage.styled';\n\nconst statusList = {\n  REJECTED: 1,\n  RESOLVED: 2,\n  PENDING: 3,\n  IDLE: 4,\n};\n\nconst NoticesPage = () => {\n  const dispatch = useDispatch();\n  const { categoryName } = useParams();\n  const isLogged = useSelector(authSelector.loggedInSelector);\n  console.log('category:', categoryName);\n  const noticesStore = useSelector(noticesSelector.selectNotices);\n  console.log('noticesStore:', noticesStore);\n  const perPage = noticesStore.perPage;\n  const { REJECTED, RESOLVED, PENDING, IDLE } = statusList;\n  const [status, setStatus] = useState(IDLE);\n\n  const switchStatus = useCallback(async () => {\n    if (noticesStore.error || noticesStore.items.length === 0) {\n      setStatus(REJECTED);\n    } else {\n      setStatus(RESOLVED);\n    }\n  }, [noticesStore.items, noticesStore.error, setStatus, REJECTED, RESOLVED]);\n\n  useEffect(() => {\n    switchStatus();\n  }, [switchStatus]);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    setStatus(PENDING);\n\n    if (isLogged && categoryName === 'own') {\n      dispatch(\n        noticesOperations.fetchNoticesOwn({\n          pattern: '',\n          currentPage: 1,\n          perPage,\n          controller: controller,\n        })\n      );\n    } else if (isLogged && categoryName === 'favorite') {\n      dispatch(\n        noticesOperations.fetchNoticesFavorites({\n          pattern: '',\n          currentPage: 1,\n          perPage,\n          controller: controller,\n        })\n      );\n    } else {\n      dispatch(\n        noticesOperations.fetchNoticesForAll({\n          pattern: '',\n          currentPage: 1,\n          perPage,\n          categoryId: categoryName,\n          controller: controller,\n        })\n      );\n    }\n\n    return () => {\n      controller.abort();\n    };\n  }, [dispatch, categoryName, isLogged, setStatus, PENDING, perPage]);\n\n  const showResults = useCallback(\n    status => {\n      switch (status) {\n        case IDLE:\n          return <div>Please, type something to the search</div>;\n        case PENDING:\n          return <div>Loading....</div>;\n        case REJECTED:\n          return <div>Oopps...no listings found.{noticesStore.error && <div>{noticesStore.error}</div>}</div>;\n        case RESOLVED:\n          return <NoticesCategoriesList notices={noticesStore.items} />;\n        default:\n          return <></>;\n      }\n    },\n    [noticesStore.items, noticesStore.error, IDLE, PENDING, REJECTED, RESOLVED]\n  );\n\n  const haldleFormSubmit = useCallback(\n    query => {\n      const controller = new AbortController();\n\n      if (isLogged && categoryName === 'own') {\n        dispatch(\n          noticesOperations.fetchNoticesOwn({\n            pattern: query,\n            currentPage: 1,\n            perPage,\n            controller: controller,\n          })\n        );\n      } else if (isLogged && categoryName === 'favorite') {\n        dispatch(\n          noticesOperations.fetchNoticesFavorites({\n            pattern: query,\n            currentPage: 1,\n            perPage,\n            controller: controller,\n          })\n        );\n      } else {\n        dispatch(\n          noticesOperations.fetchNoticesForAll({\n            pattern: query,\n            currentPage: 1,\n            perPage,\n            categoryId: categoryName,\n            controller: controller,\n          })\n        );\n      }\n      // dispatch(noticesOperations.setPattern(query));\n      // dispatch(noticesOperations.setCurrentPage(1));\n      return () => {\n        controller.abort();\n      };\n    },\n    [dispatch, categoryName, perPage, isLogged]\n  );\n\n  const clearSearch = () => {\n    const controller = new AbortController();\n\n    if (isLogged && categoryName === 'own') {\n      dispatch(\n        noticesOperations.fetchNoticesOwn({\n          pattern: '',\n          currentPage: 1,\n          perPage,\n          controller: controller,\n        })\n      );\n    } else if (isLogged && categoryName === 'favorite') {\n      dispatch(\n        noticesOperations.fetchNoticesFavorites({\n          pattern: '',\n          currentPage: 1,\n          perPage,\n          controller: controller,\n        })\n      );\n    } else {\n      dispatch(\n        noticesOperations.fetchNoticesForAll({\n          pattern: '',\n          currentPage: 1,\n          perPage,\n          categoryId: categoryName,\n          controller: controller,\n        })\n      );\n    }\n\n    dispatch(noticesOperations.setPattern(''));\n    return () => {\n      controller.abort();\n    };\n  };\n\n  const width = useWindowWidth();\n\n  const handleSwitchPage = useCallback(\n    (_, currentPage) => {\n      const controller = new AbortController();\n      const pattern = noticesStore.pattern;\n\n      if (isLogged && categoryName === 'own') {\n        dispatch(\n          noticesOperations.fetchNoticesOwn({\n            pattern,\n            currentPage,\n            perPage,\n            controller: controller,\n          })\n        );\n      } else if (isLogged && categoryName === 'favorite') {\n        dispatch(\n          noticesOperations.fetchNoticesFavorites({\n            pattern,\n            currentPage,\n            perPage,\n            controller: controller,\n          })\n        );\n      } else {\n        dispatch(\n          noticesOperations.fetchNoticesForAll({\n            pattern,\n            currentPage,\n            perPage,\n            categoryId: categoryName,\n            controller: controller,\n          })\n        );\n      }\n      dispatch(noticesOperations.setCurrentPage(currentPage));\n\n      return () => {\n        controller.abort();\n      };\n    },\n    [dispatch, noticesStore.pattern, perPage, categoryName, isLogged]\n  );\n\n  const showPagination = useCallback(() => {\n    if (!noticesStore.totalPages) {\n      return <></>;\n    }\n\n    return (\n      <Pagination\n        page={noticesStore.currentPage}\n        count={noticesStore.totalPages}\n        variant=\"outlined\"\n        onChange={handleSwitchPage}\n      />\n    );\n  }, [noticesStore.totalPages, noticesStore.currentPage, handleSwitchPage]);\n\n  return (\n    <NoticesPageContainer>\n      <Title>Find your favorite pet</Title>\n\n      <NoticesSearch pattern={noticesStore.pattern} onSubmit={haldleFormSubmit} onClear={clearSearch} />\n\n      <ButtonsBox>\n        <NoticesCategoriesNav />\n        {width >= 768 && <AddPetButton />} {width < 768 && <AddPetButtonSmall />}\n      </ButtonsBox>\n\n      {showResults(status)}\n      {showPagination()}\n    </NoticesPageContainer>\n  );\n};\n\nexport default NoticesPage;\n","import * as React from 'react';\n\nconst useLatest = current => {\n  const storedValue = React.useRef(current);\n  React.useEffect(() => {\n    storedValue.current = current;\n  });\n  return storedValue;\n};\n\nexport default useLatest;","import * as React from 'react';\nimport useLatest from '@react-hook/latest';\nexport const useDebounceCallback = (callback, wait = 100, leading = false) => {\n  const storedCallback = useLatest(callback);\n  const timeout = React.useRef();\n  const deps = [wait, leading, storedCallback]; // Cleans up pending timeouts when the deps change\n\n  function _ref() {\n    timeout.current && clearTimeout(timeout.current);\n    timeout.current = void 0;\n  }\n\n  React.useEffect(() => _ref, deps);\n\n  function _ref2() {\n    timeout.current = void 0;\n  }\n\n  return React.useCallback(function () {\n    // eslint-disable-next-line prefer-rest-params\n    const args = arguments;\n    const {\n      current\n    } = timeout; // Calls on leading edge\n\n    if (current === void 0 && leading) {\n      timeout.current = setTimeout(_ref2, wait); // eslint-disable-next-line prefer-spread\n\n      return storedCallback.current.apply(null, args);\n    } // Clear the timeout every call and start waiting again\n\n\n    current && clearTimeout(current); // Waits for `wait` before invoking the callback\n\n    timeout.current = setTimeout(() => {\n      timeout.current = void 0;\n      storedCallback.current.apply(null, args);\n    }, wait);\n  }, deps);\n};\nexport const useDebounce = (initialState, wait, leading) => {\n  const state = React.useState(initialState);\n  return [state[0], useDebounceCallback(state[1], wait, leading)];\n};","import * as React from 'react';\n\nfunction useEvent(target, type, listener, cleanup) {\n  const storedListener = React.useRef(listener);\n  const storedCleanup = React.useRef(cleanup);\n  React.useEffect(() => {\n    storedListener.current = listener;\n    storedCleanup.current = cleanup;\n  });\n  React.useEffect(() => {\n    const targetEl = target && 'current' in target ? target.current : target;\n    if (!targetEl) return;\n    let didUnsubscribe = 0;\n\n    function listener(...args) {\n      if (didUnsubscribe) return;\n      storedListener.current.apply(this, args);\n    }\n\n    targetEl.addEventListener(type, listener);\n    const cleanup = storedCleanup.current;\n    return () => {\n      didUnsubscribe = 1;\n      targetEl.removeEventListener(type, listener);\n      cleanup && cleanup();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [target, type]);\n}\n\nexport default useEvent;","import { useDebounce } from '@react-hook/debounce';\nimport useEvent from '@react-hook/event';\nconst emptyObj = {};\nconst win = typeof window === 'undefined' ? null : window;\nconst wv = win && typeof win.visualViewport !== 'undefined' ? win.visualViewport : null;\n\nconst getSize = () => [document.documentElement.clientWidth, document.documentElement.clientHeight];\n\nexport const useWindowSize = function (options) {\n  if (options === void 0) {\n    options = emptyObj;\n  }\n\n  const {\n    wait,\n    leading,\n    initialWidth = 0,\n    initialHeight = 0\n  } = options;\n  const [size, setDebouncedSize] = useDebounce(\n  /* istanbul ignore next */\n  typeof document === 'undefined' ? [initialWidth, initialHeight] : getSize, wait, leading);\n\n  const setSize = () => setDebouncedSize(getSize);\n\n  useEvent(win, 'resize', setSize); // @ts-expect-error\n\n  useEvent(wv, 'resize', setSize);\n  useEvent(win, 'orientationchange', setSize);\n  return size;\n};\nexport const useWindowHeight = options => useWindowSize(options)[1];\nexport const useWindowWidth = options => useWindowSize(options)[0];"],"names":["_jsxs","AddPet","to","children","_jsx","IconPlusSmall","width","height","href","concat","sprite","styled","Link","_templateObject","_taggedTemplateLiteral","AddPetSmall","_templateObject2","props","isMobile","isMarginT","isDisplay","_templateObject3","IconPlus","_templateObject4","PaginationList","MuiPagination","_ref","page","count","onChange","variant","selectNotices","state","notices","selectNoticesError","error","stylesBtnActive","Background","ModalWrapper","ModalContent","ModalInfo","ModalImg","_templateObject5","ModalAvatar","_templateObject6","ModalCategory","_templateObject7","ModalHeader","_templateObject8","ModalInfoList","_templateObject9","ModalInfoItemName","_templateObject10","ModalInfoItemValue","_templateObject11","ModalContact","_templateObject12","ModalComments","_templateObject13","ModalButtons","_templateObject14","ModalPhone","_templateObject15","ModalButtonAdd","_templateObject16","isSelected","isLoggedIn","CloseModalButton","_templateObject17","IconHeart","_templateObject18","IconCross","_templateObject19","ModalText","ModalAuth","Nav","LoginButton","NavLink","ButtonText","RegisterButton","IconPawPrint","toggleMenu","_Fragment","onClick","color","margin","weight","onClose","useEffect","handleKeyDown","e","code","window","addEventListener","removeEventListener","target","currentTarget","AuthButtonsModal","prev","ModalNotice","showModal","setShowModal","handleAddToFavorite","favoriteNoticeStore","isModalOpenAttention","closeModalAttention","modalRef","useRef","keyPress","useCallback","key","console","log","document","notice","user","current","ref","src","avatarURL","alt","name","category","title","birthday","type","location","sex","email","phone","comments","ModalAttention","heartActive","NoticesItemThumb","Img","CategoriesContainer","CategoriesName","DiscriptionList","DiscriptionItem","TextContainer","IconConatiner","IconSvg","IconDelete","BtnContainer","FavoriteBtnContainer","AddToFavoriteBtn","DeleteBtn","ContentContainer","Title","LearnMoreBtn","InfoTitle","_templateObject20","InfoDesc","_templateObject21","Subtitle","_templateObject22","favorite","items","dispatch","useDispatch","useSelector","getNotice","_id","categoryName","useParams","_useState","useState","_useState2","_slicedToArray","idPet","setIdPet","_useState3","_useState4","showDeleteModal","setShowDeleteModal","_useState5","_useState6","_useState7","_useState8","setIsModalOpenAttention","_useState9","saved","localStorage","getItem","JSON","parse","_useState10","setIsSelected","authSelector","openModalForDelete","givenDate","Date","timeDiff","yearsDiff","Math","floor","addToFavoriteValue","favoriteOperations","setItem","stringify","idPetAd","ModalApproveAction","isOpen","onRequestClose","onApprove","noticesOperations","idCard","btnIconColor","btnIconName","List","Item","map","_ref2","owner","NoticeCategoryItem","CategoriesNavContainer","CategoriesLink","isLogged","SearchContainer","SearchForm","SearchInput","SearchIconContainer","SearchIconBtn","IconCrossSmall","pattern","onSubmit","onClear","inputName","setInputName","event","preventDefault","trim","placeholder","value","toLowerCase","autoComplete","NoticesPageContainer","ButtonsBox","statusList","noticesStore","noticesSelector","perPage","REJECTED","RESOLVED","PENDING","IDLE","status","setStatus","switchStatus","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","next","length","stop","controller","AbortController","currentPage","categoryId","abort","showResults","NoticesCategoriesList","haldleFormSubmit","query","useWindowWidth","handleSwitchPage","_","showPagination","totalPages","Pagination","NoticesSearch","NoticesCategoriesNav","AddPetButton","AddPetButtonSmall","storedValue","React","useDebounceCallback","callback","wait","arguments","undefined","leading","storedCallback","useLatest","timeout","deps","clearTimeout","args","setTimeout","apply","listener","cleanup","storedListener","storedCleanup","targetEl","didUnsubscribe","_len","Array","_key","this","emptyObj","win","wv","visualViewport","getSize","documentElement","clientWidth","clientHeight","useWindowSize","options","_options","_options$initialWidth","initialWidth","_options$initialHeigh","initialHeight","_useDebounce","initialState","useDebounce","_useDebounce2","size","setDebouncedSize","setSize","useEvent"],"sourceRoot":""}