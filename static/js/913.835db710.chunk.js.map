{"version":3,"file":"static/js/913.835db710.chunk.js","mappings":"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","sources":["components/ModalCongrats/ModalCongrats.jsx","components/ModalCongrats/ModalCongrats.styled.js","components/AuthForm/AuthFormRegister.jsx","pages/RegisterPage/RegisterPage.jsx","utils/Icon/Icon.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport sprite from '../../images/icons.svg';\nimport Icon from 'utils/Icon/Icon';\nimport {\n  ApproveBtnModalCongrats,\n  BackdropModalCongrats,\n  BtnContainerModalCongrats,\n  BtnTextModalCongrats,\n  CloseIconModalCongrats,\n  ContainerModalCongrats,\n  ContentModalCongrats,\n  BtnIcon,\n} from './ModalCongrats.styled';\n\nconst ModalCongrats = ({ isOpen, onRequestClose, onApprove,children }) => {\n  const modalRef = useRef();\n  const portalRoot = document.getElementById('modal-root');\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const handleKeyDown = event => {\n    if (event.key === 'Escape') {\n      onRequestClose();\n    }\n  };\n\n  const handleBackdropClick = event => {\n    if (modalRef.current === event.target) {\n      onRequestClose();\n    }\n  };\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.removeEventListener('keydown', handleKeyDown);\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n      document.body.style.overflow = 'auto';\n    };\n  }, [handleKeyDown, isOpen]);\n\n  return isOpen\n    ? ReactDOM.createPortal(\n        <BackdropModalCongrats ref={modalRef} onClick={handleBackdropClick}>\n          <ContainerModalCongrats>\n            <CloseIconModalCongrats onClick={() => onRequestClose()}>\n              <Icon name=\"cross\" size=\"24\" color=\"var(--dark-blue)\" />\n            </CloseIconModalCongrats>\n\n            <ContentModalCongrats>{children}</ContentModalCongrats>\n            <BtnContainerModalCongrats>\n              <ApproveBtnModalCongrats onClick={onApprove}>\n                <BtnTextModalCongrats>Go to profile</BtnTextModalCongrats>\n                <BtnIcon width={24} height={24} fill=\"white\">\n                  <use href={`${sprite}#icon-pawprint-1`}></use>\n                </BtnIcon>\n              </ApproveBtnModalCongrats>\n            </BtnContainerModalCongrats>\n          </ContainerModalCongrats>\n        </BackdropModalCongrats>,\n        portalRoot\n      )\n    : null;\n};\n\nexport default ModalCongrats;\n","import styled from 'styled-components';\n\nexport const BackdropModalCongrats = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n\n  background-color: rgba(0, 0, 0, 0.5);\n\n  z-index: 9999;\n`;\n\nexport const ContainerModalCongrats = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n\n  min-width: 280px;\n\n  padding: 60px 16px;\n  border-radius: 20px;\n  background-color: var(--main-light-color);\n\n  transform: translate(-50%, -50%);\n  @media screen and (min-width: 768px) {\n    min-width: 608px;\n    border-radius: 40px;\n    padding: 60px 0;\n  }\n`;\n\nexport const CloseIconModalCongrats = styled.div`\n  position: absolute;\n  display: flex;\n  top: 4px;\n  right: 4px;\n  align-items: center;\n  justify-content: center;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  cursor: pointer;\n  &:hover {\n    background-color: #c5dff6;\n  }\n  @media screen and (min-width: 768px) {\n    top: 16px;\n    right: 16px;\n  }\n`;\n\nexport const ContentModalCongrats = styled.div`\n  text-align: center;\n`;\n\nexport const BtnContainerModalCongrats = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  /* margin: 40px 16px 60 12px; */\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nexport const ApproveBtnModalCongrats = styled.button`\n  display: flex;\n  /* width: 248px; */\n  padding: 8px 28px;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n  /* display: inline-flex;\n  align-items: center;\n  justify-content: center; */\n\n  width: 100%;\n  height: 40px;\n  /* padding: 9px 0; */\n  border-radius: 40px;\n  border: none;\n  background-color: var(--dark-blue);\n\n  color: #fef9f9;\n  font-family: Manrope;\n  font-size: 16px;\n  font-weight: 700;\n  letter-spacing: 0.64px;\n\n  cursor: pointer;\n\n  &:hover {\n    background: linear-gradient(315deg, #419ef1 0%, #9bd0ff 100%);\n  }\n  @media screen and (min-width: 768px) {\n    width: 248px;\n  }\n`;\n\nexport const BtnTextModalCongrats = styled.span`\n  margin-right: 8px;\n`;\n\nexport const BtnIcon = styled.svg`\n  stroke: ${({ color }) => color};\n  fill: ${({ color }) => color};\n`;\n\nexport const TitleModalCongrats = styled.h1`\n  margin-top: 28px;\n  margin-bottom: 24px;\n  color: var(--main-color);\n  text-align: center;\n  font-family: Manrope;\n  font-size: 24px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: 0.96px;\n  @media screen and (min-width: 768px) {\n    margin-top: 12px;\n    margin-bottom: 52px;\n    font-size: 36px;\n    letter-spacing: 1.44px;\n  }\n`;\n\nexport const TextModalCongrats = styled.p`\n  margin-bottom: 40px;\n  color: var(--main-color);\n  text-align: center;\n  font-family: Manrope;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: 0.64px;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 60px;\n    font-size: 24px;\n    letter-spacing: 0.96px;\n  }\n`;\n\n// import styled from 'styled-components';\n\n// export const ModalCongratsBackdrop = styled.div`\n//   height: 100vh;\n//   width: 100vw;\n\n//   background: rgba(87, 86, 86, 0.6);\n\n//   position: fixed;\n//   top: 0;\n//   left: 0;\n\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n\n//   /* border-radius: 4px;\n//   padding: 20px;\n//   margin: 0 auto;\n//   border-radius: 20px; */\n\n//   /* Shadow default */\n//   /* box-shadow: 3px 8px 14px 0px rgba(136, 198, 253, 0.19); */\n\n//   @media screen and (min-width: 768px) {\n//     /* display: flex;\n//     width: 703px;\n//     height: 256px; */\n//   }\n\n//   @media screen and (min-width: 1280px) {\n//     /* width: 821px;\n//     height: 212px; */\n//   }\n// `;\n\n// export const ModalContent = styled.div`\n//   width: 280px;\n//   height: 287px;\n\n//   padding: 16px;\n//   border-radius: 20px;\n//   background: #fff;\n//   box-shadow: 3px 8px 14px 0px rgba(136, 198, 253, 0.19);\n\n//   position: relative;\n\n//   @media screen and (min-width: 768px) {\n//     width: 608px;\n//     height: 354px;\n\n//     padding: 24px;\n//     border-radius: 40px;\n//     /* display: flex;\n//     width: 703px;\n//     height: 256px; */\n//   }\n\n//   @media screen and (min-width: 1280px) {\n//     /* width: 821px;\n//     height: 212px; */\n//   }\n// `;\n\n// export const GoToProfileButton = styled.button`\n//   border-radius: 40px;\n//   background: var(--dark-blue);\n//   border: 2px solid var(--dark-blue);\n//   color: var(--container-bg);\n//   cursor: pointer;\n//   display: inline-flex;\n//   width: 129px;\n//   height: 40px;\n//   padding: 9px 16px;\n//   align-items: center;\n\n//   gap: 8px;\n//   font-family: Manrope;\n//   font-size: 16px;\n//   font-weight: 700;\n//   line-height: normal;\n//   font-style: normal;\n\n//   /* letter-spacing: 0.64px; */\n\n//   &:hover,\n//   &:focus {\n//     background: var(--gradient-blue-bg);\n//   }\n// `;\n\n// export const IconPawPrint = styled.svg`\n//   stroke: currentColor;\n// `;\n// export const CloseButton = styled.button`\n//   position: absolute;\n//   top: -12px;\n//   right: -12px;\n//   padding: 0;\n//   width: 40px;\n//   height: 40px;\n\n//   background: transparent;\n//   border: none;\n//   border-radius: 50%;\n\n//   cursor: pointer;\n//   color: var(--dark-blue);\n\n//   &:hover {\n//     background: var(--dark-blue);\n//     color: white;\n//   }\n// `;\n\n// export const IconCrossSmall = styled.svg`\n//   stroke: currentColor;\n// `;\n","import { Formik, ErrorMessage } from 'formik';\nimport { object, string, ref } from 'yup';\nimport {\n  ErrorText,\n  ContainerAuth,\n  AuthForm,\n  AuthTitle,\n  AuthField,\n  AuthLinkToLogin,\n  AuthLinkLogin,\n  AuthRegisterButton,\n  AuthShowPassword,\n  AuthShowConfirmPassword,\n  AuthFieldWrap,\n  AuthIconShowPassword,\n  AuthIconFailed,\n  AuthIconsValidation,\n  AuthIconCheck,\n} from './AuthForm.styled';\nimport { TitleModalCongrats, TextModalCongrats } from 'components/ModalCongrats/ModalCongrats.styled';\n\nimport authOperations from '../../redux/auth/operations';\nimport { useState } from 'react';\nimport sprite from '../../images/icons.svg';\nimport ModalCongrats from 'components/ModalCongrats/ModalCongrats';\nimport { useDispatch } from 'react-redux';\n\nconst userRegisterSchema = object({\n  name: string().required().min(2, 'Your name is too short.').max(16, 'Your name is too long.'),\n  email: string().required().email('Please enter a valid email'),\n  password: string()\n    .min(6, 'Your password is too short.')\n    .max(16, 'Your password is too long.')\n    .required()\n    .matches(/[0-9]/, 'Your password must have at least 1 number')\n    .matches(/[a-z]/, 'Your password must have at least 1 lowercase letter')\n    .matches(/[A-Z]/, 'Your password must have at least 1 uppercase letter'),\n  confirmPassword: string()\n    .required('Please retype your password.')\n    .oneOf([ref('password')], 'Your passwords do not match.'),\n});\n\nconst initialValues = { name: '', email: '', password: '', confirmPassword: '' };\n\nconst AuthFormRegister = props => {\n  const dispatch = useDispatch();\n  const [isShowPassword, setIsShowPassword] = useState(false);\n  const [isShowConfirmPassword, setIsShowConfirmPassword] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const toggleModal = values => {\n    setIsModalOpen(prevState => !prevState);\n    setEmail(values.email);\n    setName(values.name);\n    setPassword(values.password);\n  };\n\n  const handleSubmitRegister = () => {\n    dispatch(authOperations.registrationUser({ name, email, password }));\n  };\n\n  return (\n    <ContainerAuth>\n      <AuthTitle>Registration</AuthTitle>\n      <Formik initialValues={initialValues} validationSchema={userRegisterSchema} onSubmit={toggleModal}>\n        {({ errors, touched, handleChange, handleBlur, values, handleSubmit }) => {\n          return (\n            <AuthForm onSubmit={handleSubmit}>\n              <AuthFieldWrap>\n                <AuthField\n                  {...props}\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"Name\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.name}\n                  valid={touched.name && !errors.name}\n                  error={touched.name && errors.name}\n                />\n\n                {errors.name && touched.name && (\n                  <AuthIconsValidation>\n                    <AuthIconFailed width={24} height={24}>\n                      <use href={`${sprite}#icon-cross-small`}></use>\n                    </AuthIconFailed>\n                  </AuthIconsValidation>\n                )}\n                {!errors.name && touched.name && (\n                  <AuthIconsValidation>\n                    <AuthIconCheck width={24} height={24}>\n                      <use href={`${sprite}#icon-check`}></use>\n                    </AuthIconCheck>\n                  </AuthIconsValidation>\n                )}\n              </AuthFieldWrap>\n              <ErrorMessage name=\"name\" render={message => <ErrorText>{message}</ErrorText>} />\n\n              <AuthFieldWrap>\n                <AuthField\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.email}\n                  valid={touched.email && !errors.email}\n                  error={touched.email && errors.email}\n                />\n\n                {errors.email && touched.email && (\n                  <AuthIconsValidation>\n                    <AuthIconFailed width={24} height={24}>\n                      <use href={`${sprite}#icon-cross-small`}></use>\n                    </AuthIconFailed>\n                  </AuthIconsValidation>\n                )}\n                {!errors.email && touched.email && (\n                  <AuthIconsValidation>\n                    <AuthIconCheck width={24} height={24}>\n                      <use href={`${sprite}#icon-check`}></use>\n                    </AuthIconCheck>\n                  </AuthIconsValidation>\n                )}\n              </AuthFieldWrap>\n              <ErrorMessage name=\"email\" render={message => <ErrorText>{message}</ErrorText>} />\n\n              <AuthFieldWrap>\n                <AuthField\n                  type={isShowPassword ? 'text' : 'password'}\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.password}\n                  valid={touched.password && !errors.password}\n                  error={touched.password && errors.password}\n                />\n\n                {errors.password && touched.password && (\n                  <AuthIconsValidation>\n                    <AuthIconFailed width={24} height={24}>\n                      <use href={`${sprite}#icon-cross-small`}></use>\n                    </AuthIconFailed>\n                  </AuthIconsValidation>\n                )}\n                {!errors.password && touched.password && (\n                  <AuthIconsValidation>\n                    <AuthIconCheck width={24} height={24}>\n                      <use href={`${sprite}#icon-check`}></use>\n                    </AuthIconCheck>\n                  </AuthIconsValidation>\n                )}\n\n                {isShowPassword ? (\n                  <AuthShowPassword\n                    type=\"button\"\n                    onClick={() => setIsShowPassword(!isShowPassword)}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.password}\n                    valid={touched.password && !errors.password}\n                    error={touched.password && errors.password}\n                  >\n                    <AuthIconShowPassword width={24} height={24} valid={touched.password && !errors.password}>\n                      <use href={`${sprite}#icon-eye-closed`}></use>\n                    </AuthIconShowPassword>\n                  </AuthShowPassword>\n                ) : (\n                  <AuthShowPassword\n                    type=\"button\"\n                    onClick={() => setIsShowPassword(!isShowPassword)}\n                    valid={touched.password && !errors.password}\n                    error={touched.password && errors.password}\n                  >\n                    <AuthIconShowPassword width={24} height={24} valid={touched.password && !errors.password}>\n                      <use href={`${sprite}#icon-eye-open`}></use>\n                    </AuthIconShowPassword>\n                  </AuthShowPassword>\n                )}\n              </AuthFieldWrap>\n              <ErrorMessage name=\"password\" render={message => <ErrorText>{message}</ErrorText>} />\n\n              <AuthFieldWrap>\n                <AuthField\n                  type={isShowConfirmPassword ? 'text' : 'password'}\n                  name=\"confirmPassword\"\n                  placeholder=\"Confirm password\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.confirmPassword}\n                  valid={touched.confirmPassword && !errors.confirmPassword}\n                  error={touched.confirmPassword && errors.confirmPassword}\n                />\n\n                {errors.confirmPassword && touched.password && (\n                  <AuthIconsValidation>\n                    <AuthIconFailed width={24} height={24}>\n                      <use href={`${sprite}#icon-cross-small`}></use>\n                    </AuthIconFailed>\n                  </AuthIconsValidation>\n                )}\n                {!errors.confirmPassword && touched.password && (\n                  <AuthIconsValidation>\n                    <AuthIconCheck width={24} height={24}>\n                      <use href={`${sprite}#icon-check`}></use>\n                    </AuthIconCheck>\n                  </AuthIconsValidation>\n                )}\n\n                {isShowConfirmPassword ? (\n                  <AuthShowConfirmPassword\n                    type=\"button\"\n                    onClick={() => setIsShowConfirmPassword(!isShowConfirmPassword)}\n                    valid={touched.password && !errors.password}\n                    error={touched.password && errors.password}\n                  >\n                    <AuthIconShowPassword width={24} height={24} valid={touched.password && !errors.password}>\n                      <use href={`${sprite}#icon-eye-closed`}></use>\n                    </AuthIconShowPassword>\n                  </AuthShowConfirmPassword>\n                ) : (\n                  <AuthShowConfirmPassword\n                    type=\"button\"\n                    onClick={() => setIsShowConfirmPassword(!isShowConfirmPassword)}\n                    valid={touched.password && !errors.password}\n                    error={touched.password && errors.password}\n                  >\n                    <AuthIconShowPassword width={24} height={24} valid={touched.password && !errors.password}>\n                      <use href={`${sprite}#icon-eye-open`}></use>\n                    </AuthIconShowPassword>\n                  </AuthShowConfirmPassword>\n                )}\n              </AuthFieldWrap>\n              <ErrorMessage name=\"confirmPassword\" render={message => <ErrorText>{message}</ErrorText>} />\n              <AuthRegisterButton type=\"submit\">Registration</AuthRegisterButton>\n              <AuthLinkToLogin>\n                Already have an account? <AuthLinkLogin to=\"/login\">Login</AuthLinkLogin>\n              </AuthLinkToLogin>\n            </AuthForm>\n          );\n        }}\n      </Formik>\n      {isModalOpen && (\n        <ModalCongrats\n          isOpen={isModalOpen}\n          toggleModal={toggleModal}\n          onApprove={handleSubmitRegister}\n          onRequestClose={toggleModal}\n        >\n          <TitleModalCongrats>Congrats!</TitleModalCongrats>\n          <TextModalCongrats>Your registration is success</TextModalCongrats>\n        </ModalCongrats>\n      )}\n    </ContainerAuth>\n  );\n};\n\nexport default AuthFormRegister;","import AuthFormRegister from 'components/AuthForm/AuthFormRegister';\n\nfunction RegisterPage() {\n  return <AuthFormRegister />;\n}\n\nexport default RegisterPage;\n","import Icons from '../../images/icons.svg'; // Path to your icons.svg\n\nconst Icon = ({ name, color, size }) => (\n  <svg className={`icon icon-${name}`} fill={color} stroke={color} width={size} height={size}>\n    <use xlinkHref={`${Icons}#icon-${name}`} />\n  </svg>\n);\n\nexport default Icon;\n"],"names":["_ref","isOpen","onRequestClose","onApprove","children","modalRef","useRef","portalRoot","document","getElementById","handleKeyDown","event","key","useEffect","addEventListener","body","style","overflow","removeEventListener","ReactDOM","_jsx","BackdropModalCongrats","ref","onClick","current","target","_jsxs","ContainerModalCongrats","CloseIconModalCongrats","Icon","name","size","color","ContentModalCongrats","BtnContainerModalCongrats","ApproveBtnModalCongrats","BtnTextModalCongrats","BtnIcon","width","height","fill","href","concat","sprite","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_ref2","TitleModalCongrats","_templateObject9","TextModalCongrats","_templateObject10","userRegisterSchema","object","string","required","min","max","email","password","matches","confirmPassword","oneOf","initialValues","props","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","isShowPassword","setIsShowPassword","_useState3","_useState4","isShowConfirmPassword","setIsShowConfirmPassword","_useState5","_useState6","isModalOpen","setIsModalOpen","_useState7","_useState8","setName","_useState9","_useState10","setEmail","_useState11","_useState12","setPassword","toggleModal","values","prevState","ContainerAuth","AuthTitle","Formik","validationSchema","onSubmit","errors","touched","handleChange","handleBlur","handleSubmit","AuthForm","AuthFieldWrap","AuthField","_objectSpread","type","placeholder","onChange","onBlur","value","valid","error","AuthIconsValidation","AuthIconFailed","AuthIconCheck","ErrorMessage","render","message","ErrorText","AuthShowPassword","AuthIconShowPassword","AuthShowConfirmPassword","AuthRegisterButton","AuthLinkToLogin","AuthLinkLogin","to","ModalCongrats","authOperations","AuthFormRegister","className","stroke","xlinkHref","Icons"],"sourceRoot":""}