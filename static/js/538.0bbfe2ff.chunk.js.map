{"version":3,"file":"static/js/538.0bbfe2ff.chunk.js","mappings":"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","sources":["components/ModalNotice/ModalNotice.styled.js","components/ModalNotice/ModalAttention.styled.js","components/ModalNotice/ModalAttention.jsx","components/ModalNotice/fetchModalDetail.js","components/ModalNotice/fetchAddToFavorite.js","components/ModalNotice/fetchDeleteToFavorite.js","components/ModalNotice/ModalNotice.jsx","components/NoticeCategoryItem/NoticeCategoryItem.styled.js","components/NoticeCategoryItem/NoticeCategoryItem.jsx","services/api/noticesFetch.js","components/ModalNotice/fetchGetFavorites.js","components/NoticesCategoriesList/NoticesCategoriesList.jsx","components/NoticesCategoriesNav/NoticesCategoriesNav.styled.js","components/NoticesCategoriesNav/NoticesCategoriesNav.jsx","components/NoticesSearch/NoticesSearch.styled.js","components/NoticesSearch/NoticesSearch.jsx","pages/NoticesPage/NoticesPage.styled.js","pages/NoticesPage/NoticesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst stylesBtnActive = {\n  lightblue: \"var(--lightblue)\",\n  darkblue: \"var(--dark-blue)\",\n  white: \"var(--main-light-color)\",\n};\n\nexport const Background = styled.div`\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(97, 97, 97, 0.60);\n  backdrop-filter: blur(4px); \n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 9999;\n`;\n\nexport const ModalWrapper = styled.div`\n  width: 681px;\n  height: 540px;\n  background: var(--main-light-color);\n  color: #000;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  position: relative;\n  border-radius: 40px;\n`;\n\nexport const ModalContent = styled.div`\n  padding: 32px;\n  width: 681px;\n\n  span {\n    display: flex;\n  }\n\n\n`;\n\nexport const ModalInfo = styled.div`\n  display: flex;\n  gap: 24px;\n  margin-bottom: 28px; \n`;\n\nexport const ModalImg = styled.div`\n  position: relative;\n  width: 262px;\n  height: 298px;\n`;\n\nexport const ModalAvatar = styled.img`\n  width: 262px;\n  height: 298px;\n  border-radius: 0px 0px 40px 40px;\n`;\n\nexport const ModalCategory = styled.p`\n  position: absolute;\n  top: 16px;\n  left: 0;\n  width: 126px;\n  height: 32px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: var(--lightblue);\n  color: #111;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  border-bottom-right-radius: 50px;\n  border-top-right-radius: 50px;  \n`;\n\nexport const ModalHeader = styled.h2`\n  color: #000;\n  font-size: 28px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: normal;\n  letter-spacing: -0.28px; \n  margin-bottom: 20px; \n`;\n\nexport const ModalInfoList = styled.div`\n  display: flex;\n  gap: 51px;\n`;\n\nexport const ModalInfoItem = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const ModalContact = styled.li`\n  color: var(--accent-color);\n  font-weight: 500;\n\n  a {\n    border-bottom: 1px solid var(--accent-color); \n  }\n`;\n\nexport const ModalComments = styled.p`\n  color: var(--main-color);\n  font-weight: 500;\n  line-height: 24px;\n  letter-spacing: 0.64px;\n  margin-bottom: 70px   \n`;\n;\n\nexport const ModalButtons = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  gap: 17px; \n`;\n\n\nexport const ModalPhone = styled.a`\n  display: flex;\n  gap: 6px;\n  width: 129px;\n  padding: 8px 20px;\n  justify-content: center;\n  align-items: center;\n  color: var(--dark-blue);\n  background: transparent;\n  border: 2px solid var(--dark-blue);\n  border-radius: 40px; \n  font-size: 16px;\n  font-family: inherit;\n  font-weight: 700;  \n  line-height: normal;\n  letter-spacing: 0.64px;\n\n  &:hover {\n    background: var(--dark-blue, linear-gradient(315deg, #419EF1 0%, #9BD0FF 100%)); \n    color: var(--main-light-color);\n  }\n`\n\nexport const ModalButtonAdd = styled.button`\n  display: flex;\n  gap: 6px;\n  width: 129px;\n  padding: 8px 20px;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  color: ${(props) => (props.isSelected && props.isLoggedIn ? stylesBtnActive.darkblue : stylesBtnActive.white)};\n  background: ${(props) => (props.isSelected && props.isLoggedIn ? stylesBtnActive.lightblue : stylesBtnActive.darkblue)};\n  border: none;\n  border-radius: 40px; \n  font-size: 16px;\n  font-family: inherit;\n  font-weight: 700;  \n  line-height: normal;\n  letter-spacing: 0.64px;  \n`\n\nexport const CloseModalButton = styled.button`\n  border: transparent;\n  background: transparent;\n  position: absolute;\n  top: 23px;\n  right: 26px;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  z-index: 10;\n`;\n\nexport const IconHeart = styled.svg`\n  stroke: ${(props) => (props.isSelected && props.isLoggedIn? stylesBtnActive.darkblue : stylesBtnActive.white)};\n  fill: ${(props) => (props.isSelected && props.isLoggedIn? stylesBtnActive.darkblue : \"transparent\")};\n\n`;\n\n\nexport const IconCross = styled.svg`\n  stroke: var(--dark-blue);\n\n  &:hover {\n    border: 1px solid var(--dark-blue);\n    border-radius: 50%;\n  }\n`;","import styled from 'styled-components';\n\nexport const ModalWrapper = styled.div`\n  width: 608px;\n  height: 429px;\n  background: var(--main-light-color);\n  color: #000;\n  position: relative;\n  border-radius: 40px;\n  padding: 60px 40px;\n  text-align: center;\n\n`;\n\nexport const ModalHeader = styled.h3`\n  color: #111;\n  font-size: 36px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: 1.44px;\n  margin-bottom: 40px; \n`;\n\nexport const ModalText = styled.p`\n  color: #111;\n  text-align: center;\n  font-family: inherit;\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 28px;\n  letter-spacing: 0.8px; \n  margin-bottom: 40px; \n`;\n\n\nexport const ModalAuth = styled.div`\n  display: block ruby;\n`;","import React, { useEffect} from 'react';\nimport { Background, CloseModalButton, IconCross } from './ModalNotice.styled';\nimport { ModalWrapper, ModalHeader, ModalText, ModalAuth } from './ModalAttention.styled';\nimport sprite from '../../images/icons.svg';\nimport  AuthNav  from '../AuthNav/AuthNav';\n\nconst ModalAttention = ({onClose}) => {\n\n  useEffect(() => {\n    \n    const handleKeyDown = e => {\n      if(e.code === 'Escape') {\n        onClose();\n      }\n    }\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n\n  }, [onClose])\n  \n  const handleBackDropClick = e => {\n    if(e.target === e.currentTarget) {\n      onClose();\n    }\n  }\n\n  return (\n    <>\n      <Background onClick={handleBackDropClick}>\n        <ModalWrapper>\n          <ModalHeader>Attention</ModalHeader>\n          <ModalText>We would like to remind you that certain functionality is available only to authorized users.If you have an account, please log in with your credentials. If you do not already have an account, you must register to access these features.</ModalText>\n          <ModalAuth>\n              <AuthNav />\n          </ModalAuth>\n          <CloseModalButton \n            aria-label='Close modal'\n            onClick={() => onClose(prev => !prev)}\n            >\n              <IconCross width={24} height={24}>\n                <use href={`${sprite}#icon-cross`}></use>\n              </IconCross>\n          </CloseModalButton>  \n        </ModalWrapper>\n      </Background>\n    \n    </>\n  )\n}\n\nexport default ModalAttention;","import axios from 'axios';\n\nlet controller = new AbortController();\n\nconst BASE_URL = 'https://fullstackforce.onrender.com/api/notices/';\n\n// function fetchModalDetail(id) {\n\n//   return fetch((`${BASE_URL}${id}`)).then(response => {\n//     if (!response.ok) {\n//       throw new Error(response.status);\n//     }\n//     return response.json();\n//   })\n// }\n\nasync function fetchModalDetail(id) {\n    const response = await axios.get((`${BASE_URL}${id}`), {\n        signal: controller.signal\n    });\n    return response.data;\n}\n\nexport default fetchModalDetail;\n\n","import axios from 'axios';\n\nlet controller = new AbortController();\n\nconst BASE_URL = 'https://fullstackforce.onrender.com/api/notices/';\n\nfunction fetchAddToFavorite(id, data) {\n  const options = {\n    method: \"PATCH\",\n    signal: controller.signal,\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json; charset=UTF-8\",\n      \"Authorization\": `${axios.defaults.headers.common.Authorization}`\n    },\n  };\n\n  fetch((`${BASE_URL}${id}/favorites`), options)\n  .then(response => response.json())\n  .then(patch => console.log(patch))\n  .catch(error => console.log(error));\n\n}\n\n\nexport default fetchAddToFavorite;\n\n\n\n\n","import axios from 'axios';\n\nlet controller = new AbortController();\n\nconst BASE_URL = 'https://fullstackforce.onrender.com/api/notices/';\n\nconst options = {\n  method: \"DELETE\",\n  signal: controller.signal,\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": `${axios.defaults.headers.common.Authorization}`\n  },\n};\n\nfunction fetchDeleteToFavorite(id) {\n\n  fetch((`${BASE_URL}${id}/favorites`), options)\n  .then(response => response.json())\n  .then(patch => console.log(patch))\n  .catch(error => console.log(error));\n\n}\n\n\nexport default fetchDeleteToFavorite;","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport {Background , ModalWrapper, ModalContent, ModalInfo, ModalImg, ModalAvatar, ModalCategory, ModalHeader, ModalInfoList, ModalInfoItem, ModalContact, ModalComments, ModalButtons, ModalPhone, ModalButtonAdd, CloseModalButton,  IconHeart, IconCross} from './ModalNotice.styled';\nimport ModalAttention from './ModalAttention';\nimport fetchModalDetail from '../ModalNotice/fetchModalDetail';\nimport fetchAddToFavorite from '../ModalNotice/fetchAddToFavorite';\nimport fetchDeleteToFavorite from '../ModalNotice/fetchDeleteToFavorite';\nimport sprite from '../../images/icons.svg';\nimport authSelector from '../../redux/auth/authSelector';\nimport { useSelector } from 'react-redux';\n\nexport const ModalNotice = ({ showModal, setShowModal, idCard }) => {\n  const [valueModalInfo, setValueModalInfo] = useState({});\n  const [userModalInfo, setUserModalInfo] = useState({});\n  const [isSelected, setIsSelected] = useState(false);\n  const [isModalOpenAttention, setIsModalOpenAttention] = useState(false);\n\n  const isLoggedIn = useSelector(authSelector.loggedInSelector);\n\n  // useEffect(() => {\n  //   fetchModalDetail(idCard)\n  //     .then((data) => {\n  //       return [setValueModalInfo({...data.notice}), setUserModalInfo({...data.user})];\n  //       ;\n  //     })\n  //     .catch(error => console.log(error))\n  // }, [idCard]);\n\n  useEffect(() => {\n    async function fetchModalDetailPet() {\n      try {\n        const data = await fetchModalDetail(idCard);\n        setValueModalInfo({...data.notice});\n        setUserModalInfo({...data.user});\n      } catch (error) {\n        console.log(error)\n      }\n    }\n    fetchModalDetailPet();\n\n    const savedSelectedState = localStorage.getItem(`pet_${idCard}`);\n\n    if (savedSelectedState !== null) {\n      setIsSelected(JSON.parse(savedSelectedState));\n    } else {\n      setIsSelected(false);\n    }\n\n  }, [idCard, isLoggedIn])\n\n  const modalRef = useRef();\n\n  const closeModalAttention = () => {\n    setIsModalOpenAttention(!isModalOpenAttention)\n  }\n\n  const closeModal = e => {\n    if (modalRef.current === e.target) {\n      setShowModal(false);\n    }\n  };\n\n  const keyPress = useCallback(\n    e => {\n      if (e.key === 'Escape' && showModal) {\n        setShowModal(false);\n        console.log('I pressed');\n      }\n    },\n    [setShowModal, showModal]\n  );\n\n  useEffect(\n    () => {\n      document.addEventListener('keydown', keyPress);\n      return () => document.removeEventListener('keydown', keyPress);\n    },\n    [keyPress]\n  );\n\n  const updateLocalStorage = () => {\n    localStorage.setItem(`pet_${idCard}`, JSON.stringify(isSelected));\n  };\n\n\n  const handleAddToFavorite = () => {\n    if(isLoggedIn) {\n\n      if(isSelected) {\n        fetchDeleteToFavorite(idCard)\n        setIsSelected(!isSelected);\n      } else {\n        fetchAddToFavorite(idCard, valueModalInfo);\n        setIsSelected(!isSelected);\n      }\n\n    } else {\n      setShowModal(false);\n      setIsModalOpenAttention(true);\n    }\n  };\n\n  const {name, birthday, type, sex, location, comments, avatarURL, category} = valueModalInfo;\n\n  const {email, phone} = userModalInfo;\n\n  useEffect(updateLocalStorage, [isSelected, idCard]);\n\n  return (\n    <>\n      {showModal ? (\n        <Background onClick={closeModal} ref={modalRef}>\n          <ModalWrapper showModal={showModal}>\n              <ModalContent>\n                <ModalInfo>\n                  <ModalImg>\n                    <ModalAvatar src={avatarURL} alt={name} />\n                    <ModalCategory>{category}</ModalCategory>\n                  </ModalImg>\n                  \n                  <div>\n                    <ModalHeader>Сute dog looking for a home</ModalHeader>\n                    <ModalInfoList>\n                    <ModalInfoItem>\n                      <li><strong>Name:</strong></li>\n                      <li><strong>Birthday:</strong></li>\n                      <li><strong>Type:</strong></li>\n                      <li><strong>Place:</strong></li>\n                      <li><strong>The sex:</strong></li>\n                      <li><strong>Email:</strong></li>\n                      <li><strong>Phone:</strong></li>\n                    </ModalInfoItem>\n\n                    <ModalInfoItem>\n                      <li>{name || \"empty\"}</li>\n                      <li>{birthday || \"empty\"}</li>\n                      <li>{type || \"empty\"}</li>\n                      <li>{location || \"empty\"}</li>\n                      <li>{sex || \"empty\"}</li>\n                      <ModalContact>\n                        <a href={`mailto: ${email}`}>{email || \"email@gamil.com\"}</a>\n                      </ModalContact>\n                      <ModalContact>\n                        <a href={`tel: ${phone}`}>{phone || \"+380 (XXX) (XXXXXXXX)\"}</a>\n                      </ModalContact>\n                    </ModalInfoItem>\n                    </ModalInfoList>\n                  </div>\n                </ModalInfo>\n\n                <ModalComments><strong>Comments:</strong> {comments}</ModalComments>\n\n                <ModalButtons>\n                  <ModalPhone href={`tel: ${phone}`}>Contact</ModalPhone>\n\n                  <ModalButtonAdd onClick={handleAddToFavorite} isSelected = {isSelected} isLoggedIn = {isLoggedIn}><span>{isSelected && isLoggedIn? \"Delete\" : \"Add\"}</span> <span>  \n                  <IconHeart width={24} height={24} isSelected = {isSelected} isLoggedIn = {isLoggedIn}>\n                    <use href={`${sprite}#icon-heart`}></use>\n                  </IconHeart>\n                  </span></ModalButtonAdd>\n\n                </ModalButtons>\n              </ModalContent>\n              <CloseModalButton\n                aria-label='Close modal'\n                onClick={() => setShowModal(prev => !prev)}\n              >\n                <IconCross width={24} height={24}>\n                  <use href={`${sprite}#icon-cross`}></use>\n                </IconCross>\n              </CloseModalButton>\n          </ModalWrapper>          \n        </Background>\n      ) : null}\n      \n    {isModalOpenAttention ? (<ModalAttention onClose={closeModalAttention}/>) : null}\n    </>\n\n  );\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst NoticesItemThumb = styled.div`\n  position: relative;\n`;\n\nconst CategoriesContainer = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: var(--lightblue);\n  padding: 10px 16px;\n  height: 36px;\n  border-top-right-radius: 16px;\n  border-bottom-right-radius: 16px;\n  top: 12px;\n`;\n\nconst CategoriesName = styled.span`\n  font-size: 14px;\n  font-weight: 500;\n`;\n\nconst DiscriptionList = styled.ul`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n  padding: 0 8px;\n  bottom: 0;\n`;\n\nconst DiscriptionItem = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 4px;\n  width: 80px;\n  border-radius: 16px;\n  background-color: var(--lightblue);\n`;\n\nconst IconConatiner = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst IconSvg = styled.svg`\n  fill: var(--lightblue);\n  stroke: var(--dark-blue);\n  /* &:hover,\n  :focus {\n    fill: var(--dark-blue);\n  } */\n`;\n\nconst FavoriteBtnContainer = styled.div`\n  position: absolute;\n  display: flex;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: var(--lightblue);\n  top: 12px;\n  right: 12px;\n`;\n\nconst AddToFavoriteBtn = styled.button`\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  width: 100%;\n  border-radius: 50%;\n  background-color: var(--lightblue);\n  padding: 0;\n  &:hover ${IconSvg}, :focus ${IconSvg} {\n    fill: var(--dark-blue);\n  }\n`;\n\nconst AddPet = styled(Link)`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border-radius: 50%;\n  background: var(--dark-blue);\n  border: 2px solid var(--dark-blue);\n  color: var(--container-bg);\n  cursor: pointer;\n  display: inline-flex;\n  width: 80px;\n  height: 80px;\n  padding: 17px 16px;\n  gap: 4px;\n  font-size: 12px;\n  right: 0;\n  bottom: 60px;\n\n  &:hover,\n  &:focus {\n    background: var(--gradient-blue-bg);\n    border: var(--gradient-blue-bg);\n  }\n`;\n\nconst IconPlusSmall = styled.svg`\n  stroke: var(--main-light-color);\n`;\n\nexport {\n  NoticesItemThumb,\n  CategoriesName,\n  CategoriesContainer,\n  DiscriptionList,\n  DiscriptionItem,\n  IconSvg,\n  IconConatiner,\n  FavoriteBtnContainer,\n  AddToFavoriteBtn,\n  AddPet,\n  IconPlusSmall,\n};\n","import React, { useState } from 'react';\nimport { ModalNotice } from '../ModalNotice/ModalNotice';\nimport {\n  CategoriesContainer,\n  CategoriesName,\n  NoticesItemThumb,\n  DiscriptionList,\n  DiscriptionItem,\n  IconSvg,\n  IconConatiner,\n  AddToFavoriteBtn,\n  FavoriteBtnContainer,\n  AddPet,\n  IconPlusSmall,\n} from './NoticeCategoryItem.styled';\nimport sprite from '../../images/icons.svg';\n\nconst NoticeCategoryItem = ({ responseByCategory }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [idCard, setIdCard] = useState('');\n\n  const { _id, title, birthday, category, location, sex, avatarURL } = responseByCategory;\n\n  const openModal = () => {\n    setShowModal(showModal => !showModal);\n    setIdCard(_id);\n  };\n\n  const givenDate = new Date(birthday);\n  const currentDate = new Date();\n  const timeDiff = currentDate - givenDate;\n  const millisecondsPerYear = 1000 * 60 * 60 * 24 * 365.25;\n  const yearsDiff = Math.floor(timeDiff / millisecondsPerYear);\n\n  return (\n    <div>\n      <NoticesItemThumb>\n        <img src={avatarURL} alt=\"pets avatar\" width={280} height={290} />\n        <CategoriesContainer>\n          {category !== 'for-free' ? (\n            <CategoriesName>{category}</CategoriesName>\n          ) : (\n            <CategoriesName>in goood hands</CategoriesName>\n          )}\n        </CategoriesContainer>\n        <DiscriptionList>\n          <DiscriptionItem>\n            <IconConatiner>\n              <IconSvg width={24} height={24}>\n                <use href={`${sprite}#icon-location-1`}></use>\n              </IconSvg>\n            </IconConatiner>\n            {location}\n          </DiscriptionItem>\n          {yearsDiff === 1 ? (\n            <DiscriptionItem>\n              <IconConatiner>\n                <IconSvg width={24} height={24}>\n                  <use href={`${sprite}#icon-clock`}></use>\n                </IconSvg>\n              </IconConatiner>\n              {`${yearsDiff} year`}\n            </DiscriptionItem>\n          ) : (\n            <DiscriptionItem>\n              <IconConatiner>\n                <IconSvg width={24} height={24}>\n                  <use href={`${sprite}#icon-clock`}></use>\n                </IconSvg>\n              </IconConatiner>\n              {`${yearsDiff} years`}\n            </DiscriptionItem>\n          )}\n          <DiscriptionItem>\n            <IconConatiner>\n              <IconSvg width={24} height={24}>\n                {sex === 'male' ? <use href={`${sprite}#icon-male`}></use> : <use href={`${sprite}#icon-female`}></use>}\n              </IconSvg>\n            </IconConatiner>\n            {sex}\n          </DiscriptionItem>\n        </DiscriptionList>\n        <FavoriteBtnContainer>\n          <AddToFavoriteBtn type=\"button\">\n            <IconSvg width={24} height={24}>\n              <use href={`${sprite}#icon-heart`}></use>\n            </IconSvg>\n          </AddToFavoriteBtn>\n        </FavoriteBtnContainer>\n        <AddPet to=\"/add-pet\">\n          <IconPlusSmall width={24} height={24}>\n            <use href={`${sprite}#icon-plus`}></use>\n          </IconPlusSmall>\n          Add Pet\n        </AddPet>\n      </NoticesItemThumb>\n      <h3>{title}</h3>\n      <button type=\"button\" onClick={openModal}>\n        Learn more\n      </button>\n      <ModalNotice showModal={showModal} setShowModal={setShowModal} idCard={idCard} />\n    </div>\n  );\n};\n\nexport default NoticeCategoryItem;\n","import axios from 'axios';\n\nexport async function fetchByCategory(category, controller) {\n  const baseURL = `https://fullstackforce.onrender.com/api/notices?category=${category}`;\n  const data = await axios.get(baseURL, { signal: controller.signal });\n  return data;\n}\n\nexport async function fetchByCategoryAuth(category, controller) {\n  const baseURL = `https://fullstackforce.onrender.com/api/notices/users?category=${category}`;\n  const data = await axios.get(baseURL, { signal: controller.signal });\n  return data;\n}\n","import axios from 'axios';\n\nlet controller = new AbortController();\n\nconst BASE_URL = 'https://fullstackforce.onrender.com/api/notices/favorites';\n\nconst options = {\n  method: \"GET\",\n  signal: controller.signal,\n  headers: {\n    \"Content-Type\": \"application/json; charset=UTF-8\",\n    \"Authorization\": `${axios.defaults.headers.common.Authorization}`\n  },\n};\n\nfunction fetchGetFavorites() {\n\n  return fetch((`${BASE_URL}`), options).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  })\n}\nexport default fetchGetFavorites;\n\n","import NoticeCategoryItem from 'components/NoticeCategoryItem/NoticeCategoryItem';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport authSelector from 'redux/auth/authSelector';\nimport { fetchByCategory, fetchByCategoryAuth } from '../../services/api/noticesFetch';\nimport fetchGetFavorites from '../ModalNotice/fetchGetFavorites';\n\nconst NoticesCategoriesList = () => {\n  const [resByCategory, setResByCategory] = useState([]);\n\n  console.log('resByCategory:', resByCategory);\n  const { categoryName } = useParams();\n  const isLogged = useSelector(authSelector.loggedInSelector);\n  console.log('isLogged:', useSelector(authSelector.loggedInSelector));\n\n  useEffect(() => {\n    if (!categoryName) return;\n\n    const controller = new AbortController();\n\n    async function fetchDataByCategory() {\n      try {\n        if (isLogged && categoryName === 'own' && categoryName === 'favorite') {\n          const response = await fetchByCategoryAuth(categoryName, controller);\n          response.data.map(({ notices }) => {\n            return setResByCategory(notices);\n          });\n        }\n\n        if(isLogged && categoryName === 'favorite') {\n          fetchGetFavorites()\n          .then((data) => {\n            data.map(({ favorites }) => setResByCategory(favorites));\n          })\n          .catch(error => console.log(error))\n        }\n        \n        const response = await fetchByCategory(categoryName, controller);\n\n        // if (response.data) return setResByCategory(null);\n\n        response.data.map(({ notices }) => {\n          return setResByCategory(notices);\n        });\n      } catch (e) {\n        console.log(e.message);\n      }\n    }\n\n    fetchDataByCategory();\n\n    return () => {\n      controller.abort();\n    };\n  }, [categoryName, isLogged]);\n\n  return (\n    <div>\n      {resByCategory && (\n        <ul>\n          {resByCategory.map(\n            ({ _id, comments, title, birthday, category, location, name, owner, sex, type, avatarURL }) => {\n              return (\n                <li key={_id}>\n                  <NoticeCategoryItem\n                    responseByCategory={{\n                      _id,\n                      comments,\n                      title,\n                      birthday,\n                      category,\n                      location,\n                      name,\n                      owner,\n                      sex,\n                      type,\n                      avatarURL,\n                    }}\n\n                  />\n                </li>\n              );\n            }\n          )}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default NoticesCategoriesList;\n\n// <div>\n//   {!resByCategory ? (\n//     <Navigate to=\"*\" />\n//   ) : (\n//     <ul>\n//       {resByCategory.map(({ _id, comments, title, birthday, category, location, name, owner, sex, type }) => {\n//         return (\n//           <li key={_id}>\n//             <NoticeCategoryItem\n//               responseByCategory={{ _id, comments, title, birthday, category, location, name, owner, sex, type }}\n//             />\n//           </li>\n//         );\n//       })}\n//     </ul>\n//   )}\n// </div>;\n\n// <div>\n//   {resByCategory && (\n//     <ul>\n//       {resByCategory.map(({ _id, comments, title, birthday, category, location, name, owner, sex, type }) => {\n//         return (\n//           <li key={_id}>\n//             <NoticeCategoryItem\n//               responseByCategory={{ _id, comments, title, birthday, category, location, name, owner, sex, type }}\n//             />\n//           </li>\n//         );\n//       })}\n//     </ul>\n//   )}\n// </div>;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst CategoriesNavContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  width: 170px;\n  padding-bottom: 24px;\n`;\n\nconst CategoriesLink = styled(NavLink)`\n  font-size: 14px;\n  padding: 8px 16px;\n  border-radius: 40px;\n  color: var(--dark-blue);\n  background-color: var(--lightblue);\n  &.active {\n    color: var(--bg-color);\n    background-color: var(--dark-blue);\n  }\n`;\n\nexport { CategoriesNavContainer, CategoriesLink };\n","import { useSelector } from 'react-redux';\nimport authSelector from 'redux/auth/authSelector';\nimport { CategoriesNavContainer, CategoriesLink } from './NoticesCategoriesNav.styled';\n\nconst NoticesCategoriesNav = () => {\n  const isLogged = useSelector(authSelector.loggedInSelector);\n\n  return (\n    <CategoriesNavContainer>\n      <CategoriesLink to=\"/notices/sell\">sell</CategoriesLink>\n      <CategoriesLink to=\"/notices/lost-found\">lost/found</CategoriesLink>\n      <CategoriesLink to=\"/notices/for-free\">in good hands</CategoriesLink>\n      {isLogged && <CategoriesLink to=\"/notices/favorite\">favorite ads</CategoriesLink>}\n      {isLogged && <CategoriesLink to=\"/notices/own\">my ads</CategoriesLink>}\n    </CategoriesNavContainer>\n  );\n};\n\nexport default NoticesCategoriesNav;\n","import styled from 'styled-components';\n\nconst SearchContainer = styled.div`\n  width: 100%;\n`;\n\nconst SearchForm = styled.form`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  padding-top: 24px;\n  padding-bottom: 20px;\n`;\n\nconst SearchInput = styled.input`\n  font-size: 14px;\n  border: none;\n  padding-left: 20px;\n  width: 100%;\n  height: 44px;\n  padding-bottom: 4px;\n  border-radius: 24px;\n  box-shadow: 3px 8px 14px 0px rgba(136, 198, 253, 0.2);\n`;\n\nconst SearchIconContainer = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 24px;\n  height: 24px;\n  bottom: 31px;\n  right: 16px;\n`;\n\nconst SearchIconBtn = styled.button`\n  border: none;\n  width: 100%;\n  height: 100%;\n  background-color: white;\n`;\n\nexport { SearchContainer, SearchForm, SearchInput, SearchIconContainer, SearchIconBtn };\n","import Icon from 'utils/Icon/Icon';\nimport { SearchContainer, SearchForm, SearchInput, SearchIconContainer, SearchIconBtn } from './NoticesSearch.styled';\n\nconst NoticesSearch = () => {\n  return (\n    <SearchContainer>\n      <SearchForm>\n        <SearchInput type=\"text\" name=\"searchforpet\" placeholder=\"Search\" />\n        <SearchIconContainer>\n          <SearchIconBtn type=\"button\">\n            <Icon name=\"search\" color=\"var(--dark-blue)\" size={17} />\n          </SearchIconBtn>\n        </SearchIconContainer>\n      </SearchForm>\n    </SearchContainer>\n  );\n};\n\nexport default NoticesSearch;\n","import styled from 'styled-components';\n\nconst NoticesPageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-top: 40px;\n  align-items: center;\n  width: 100%;\n`;\n\nconst Title = styled.h2`\n  display: flex;\n  font-size: 24px;\n  width: 246px;\n  height: 33px;\n  text-align: center;\n`;\n\nexport { NoticesPageContainer, Title };\n","import NoticesCategoriesList from 'components/NoticesCategoriesList/NoticesCategoriesList';\nimport NoticesCategoriesNav from 'components/NoticesCategoriesNav/NoticesCategoriesNav';\nimport NoticesSearch from 'components/NoticesSearch/NoticesSearch';\nimport { NoticesPageContainer, Title } from './NoticesPage.styled';\n\nconst NoticesPage = () => {\n  return (\n    <NoticesPageContainer>\n      <Title>Find your favorite pet</Title>\n      <NoticesSearch />\n      <NoticesCategoriesNav />\n      <NoticesCategoriesList />\n    </NoticesPageContainer>\n  );\n};\n\nexport default NoticesPage;\n"],"names":["stylesBtnActive","Background","styled","_templateObject","_taggedTemplateLiteral","ModalWrapper","_templateObject2","ModalContent","_templateObject3","ModalInfo","_templateObject4","ModalImg","_templateObject5","ModalAvatar","_templateObject6","ModalCategory","_templateObject7","ModalHeader","_templateObject8","ModalInfoList","_templateObject9","ModalInfoItem","_templateObject10","ModalContact","_templateObject11","ModalComments","_templateObject12","ModalButtons","_templateObject13","ModalPhone","_templateObject14","ModalButtonAdd","_templateObject15","props","isSelected","isLoggedIn","CloseModalButton","_templateObject16","IconHeart","_templateObject17","IconCross","_templateObject18","ModalText","ModalAuth","_ref","onClose","useEffect","handleKeyDown","e","code","window","addEventListener","removeEventListener","_jsx","_Fragment","children","onClick","target","currentTarget","_jsxs","AuthNav","prev","width","height","href","concat","sprite","controller","AbortController","BASE_URL","_fetchModalDetail","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","response","wrap","_context","next","axios","signal","sent","abrupt","data","stop","apply","arguments","_x","options","method","body","JSON","stringify","headers","fetch","then","json","patch","console","log","catch","error","ModalNotice","showModal","setShowModal","idCard","_useState","useState","_useState2","_slicedToArray","valueModalInfo","setValueModalInfo","_useState3","_useState4","userModalInfo","setUserModalInfo","_useState5","_useState6","setIsSelected","_useState7","_useState8","isModalOpenAttention","setIsModalOpenAttention","useSelector","authSelector","_fetchModalDetailPet","fetchModalDetail","_objectSpread","notice","user","t0","fetchModalDetailPet","savedSelectedState","localStorage","getItem","parse","modalRef","useRef","keyPress","useCallback","key","document","name","birthday","type","sex","location","comments","avatarURL","category","email","phone","setItem","current","ref","src","alt","fetchDeleteToFavorite","fetchAddToFavorite","ModalAttention","NoticesItemThumb","CategoriesContainer","CategoriesName","DiscriptionList","DiscriptionItem","IconConatiner","IconSvg","FavoriteBtnContainer","AddToFavoriteBtn","AddPet","Link","IconPlusSmall","responseByCategory","setIdCard","_id","title","givenDate","Date","timeDiff","yearsDiff","Math","floor","to","fetchByCategory","_x2","_fetchByCategory","baseURL","fetchByCategoryAuth","_x3","_x4","_fetchByCategoryAuth","_callee2","_context2","ok","Error","status","resByCategory","setResByCategory","categoryName","useParams","isLogged","_fetchDataByCategory","fetchDataByCategory","abort","map","notices","fetchGetFavorites","_ref2","favorites","_ref3","message","_ref4","owner","NoticeCategoryItem","CategoriesNavContainer","CategoriesLink","NavLink","SearchContainer","SearchForm","SearchInput","SearchIconContainer","SearchIconBtn","placeholder","Icon","color","size","NoticesPageContainer","Title","NoticesSearch","NoticesCategoriesNav","NoticesCategoriesList"],"sourceRoot":""}