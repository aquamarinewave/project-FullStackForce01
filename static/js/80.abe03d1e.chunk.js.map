{"version":3,"file":"static/js/80.abe03d1e.chunk.js","mappings":"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","sources":["components/SharedLayout/SharedLayout.styled.js","components/Header/Header.styled.js","components/Nav/Nav.styled.js","components/Nav/Nav.jsx","components/AuthNav/AuthNav.styled.js","hooks/useResize.js","components/MobileMenu/MobileMenu.styled.js","components/Logo/Logo.styled.js","components/Logo/Logo.jsx","components/Logout/Logout.styled.js","components/Logout/Logout.jsx","components/MobileMenu/MobileMenu.jsx","components/AuthNav/AuthNav.jsx","components/UserNav/UserNav.styled.js","components/UserNav/UserNav.jsx","components/Navigation/Navigation.jsx","components/Header/Header.jsx","components/SharedLayout/SharedLayout.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  min-width: 320px;\n  max-width: 480px;\n  margin: 0 auto;\n  padding-left: 20px;\n  padding-right: 20px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    max-width: 1280px;\n    padding-left: 16px;\n    padding-right: 16px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const MainHeader = styled.header`\n  height: 28px;\n  margin-top: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  z-index: 2;\n  position: sticky;\n\n  @media screen and (min-width: 768px) {\n    height: 44px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    height: 48px;\n    margin-top: 20px;\n  }\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MainNav = styled.nav`\n  display: ${props => (props.isMobile ? 'flex' : 'none')};\n  flex-direction: column;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    display: ${props => (props.isMobile ? 'flex' : 'none')};\n  }\n  @media screen and (min-width: 1280px) {\n    display: block;\n    margin-right: 80px;\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  font-size: 32px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: 1.28px;\n  &:active {\n    color: var(--accent-color);\n  }\n  margin-bottom: 20px;\n  &:last-child {\n    margin-bottom: 0px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-family: Manrope;\n    font-size: 48px;\n\n    letter-spacing: 1.92px;\n    color: var(--main-color);\n    margin-bottom: 60px;\n    &:last-child {\n      margin-bottom: 0px;\n    }\n  }\n  @media screen and (min-width: 1280px) {\n    font-family: Manrope;\n    font-size: 20px;\n    letter-spacing: 0.8px;\n    color: var(--main-color);\n    margin-right: 40px;\n    &:last-child {\n      margin-right: 0px;\n    }\n  }\n`;\n","import { MainNav, Link } from \"./Nav.styled\"\n\nconst Nav = ({isMobile}) => {\n  return (\n      <MainNav isMobile={isMobile}>\n        <Link to=\"/news\">News</Link>\n        <Link to=\"/notices\">Find Pet</Link>\n        <Link to=\"/friends\">Our Friends</Link>\n      </MainNav>\n  );\n};\n\nexport default Nav;","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Nav = styled.nav`\n  display: flex;\n  align-items: center;\n`;\n\nexport const LoginButton = styled(NavLink)`\n  border-radius: 40px;\n  border: 2px solid var(--accent-color);\n  background: var(--accent-color);\n  cursor: pointer;\n  display: none;\n\n  @media screen and (min-width: 768px) {\n    height: 40px;\n    width: 165px;\n    padding-right: 20px;\n    padding-left: 20px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-right: 20px;\n  }\n`;\n\nconst handleColorText = color => {\n  switch (color) {\n    case 'login':\n      return '#fef9f9';\n    case 'register':\n      return 'var(--accent-color)';\n    case 'logout':\n      return '#fef9f9';\n    case 'name':\n      return 'var(--accent-color)';\n    default:\n      return 'var(--main-color)';\n  }\n};\n\nconst handleWeightText = weight => {\n  switch (weight) {\n    case 'usual':\n      return '500';\n    case 'semi-bold':\n      return '600';\n    case 'bold':\n      return '700';\n    default:\n      return '500';\n  }\n};\n\nexport const ButtonText = styled.p`\n  margin-right: ${props => props.margin || '0px'};\n  margin-left: ${props => props.marginL || '0px'};\n  color: ${({ color }) => handleColorText(color)};\n  font-weight: ${({ weight }) => handleWeightText(weight)};\n\n  @media screen and (min-width: 768px) {\n    font-family: Manrope;\n    font-size: 16px;\n    font-style: normal;\n    line-height: normal;\n    letter-spacing: 0.64px;\n \n  }\n`;\n\nexport const RegisterButton = styled(NavLink)`\n  display: none;\n  border-radius: 40px;\n  background: var(--main-light-color);\n  border: 2px solid var(--accent-color);\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n   margin-right: 24px;\n    height: 40px;\n    width: 142px;\n    display: flex;\n    align-items: center;\n  }\n`;\n\nexport const BurgerButton = styled.button`\n  cursor: pointer;\n  color: var(--main-light-color);\n  border: transparent;\n  background: var(--main-light-color);\n  display: flex;\n  align-items: center;\n  padding: 0;\n  @media screen and (min-width: 1280px) {\n    display: none;\n  }\n`;\n\nexport const IconPawPrint = styled.svg`\n  fill: var(--main-light-color);\n\n  &:hover {\n    ${'' /* fill: green; */}\n  }\n`;\n\nexport const IconBurger = styled.svg`\n  stroke: #ffc107;\n\n  &:hover {\n    ${'' /* fill: green; */}\n  }\n`;\n","import { useEffect, useState } from 'react';\n\nconst useResize = () => {\n  const [width, setWidth] = useState([0]);\n\n  useEffect(() => {\n    const handleWidth = () => {\n      setWidth([window.innerWidth]);\n    };\n\n    window.addEventListener('resize', handleWidth);\n\n    return () => {\n      window.removeEventListener('resize', handleWidth);\n    };\n  }, []);\n\n  return width;\n};\n\nexport default useResize;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\n\nexport const Test = styled.div`\n  position: fixed;\n  z-index: 100;\n  display: block;\n  box-sizing: border-box;\n\n  min-width: 320px;\n  max-width: 100%;\n  width: 100%;\n  height: 100vh;\n  padding: 20px;\n\n  overflow-y: hidden;\n  top: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: #fef9f9;\n  display: ${props => (props.isOpen ? 'inline' : 'none')};\n\n  @media screen and (min-width: 768px) {\n    padding: 24px 32px;\n    display: ${props => (props.isOpen ? 'block' : 'none')};\n  }\n  @media screen and (min-width: 1280px) {\n    width: 1280px;\n    padding: 20px 16px;\n  }\n`;\n\nexport const Menu = styled.div`\n  min-height: 100vh; \n  width: 100%;\n  display: ${props => (props.isOpen ? 'inline' : 'none')};\n  z-index: 15;\n\n  @media screen and (min-width: 768px) {\n    display: ${props => (props.isOpen ? 'block' : 'none')};\n    z-index: 15;\n    position: absolute;\n   bottom: 0;\n    background: var(--container-bg);\n  }\n\n  @media screen and (min-width: 1280px) {\n    display: none;\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  @media screen and (min-width: 768px) {\n    font-family: Manrope;\n    font-size: 48px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: normal;\n    letter-spacing: 1.92px;\n    color: var(--main-color);\n    margin-right: 40px;\n    &:active {\n      color: var(--accent-color);\n    }\n    &:last-child {\n      margin-right: 0px;\n    }\n  }\n  @media screen and (min-width: 1280px) {\n    font-family: Manrope;\n    font-size: 20px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: normal;\n    letter-spacing: 0.8px;\n    color: var(--main-color);\n    margin-right: 40px;\n    &:active {\n      color: var(--accent-color);\n    }\n    &:last-child {\n      margin-right: 0px;\n    }\n  }\n`;\n\nexport const UserButton = styled(NavLink)`\n  background: var(--main-light-color);\n  border-radius: 20px;\n  border: transparent;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  margin-right: 8px;\n  padding: 0;\n\n  @media screen and (min-width: 768px) {\n    height: 40px;\n    display: flex;\n    align-items: center;\n  }\n\n  @media screen and (min-width: 1280px) {\n    height: 44px;\n    width: 113px;\n    display: flex;\n    align-items: center;\n  }\n`;\n\nexport const IconUser = styled.svg`\n  stroke: var(--accent-color);\n\n  &:hover {\n    ${'' /* fill: green; */}\n  }\n`;\nexport const CloseButton = styled.button`\n  cursor: pointer;\n  color: var(--main-light-color);\n  border: transparent;\n  background: var(--main-light-color);\n  display: flex;\n  align-items: center;\n  padding: 0;\n`;\nconst handleColorText = color => {\n  switch (color) {\n    case 'login':\n      return 'var(--bg-color)';\n    case 'register':\n      return 'var(--accent-color)';\n    case 'logout':\n      return 'var(--bg-color)';\n    case 'name':\n      return 'var(--accent-color)';\n    default:\n      return 'var(--main-color)';\n  }\n};\n\nconst handleWeightText = weight => {\n  switch (weight) {\n    case 'usual':\n      return '500';\n    case 'semi-bold':\n      return '600';\n    case 'bold':\n      return '700';\n    default:\n      return '500';\n  }\n};\n\nexport const ButtonText = styled.p`\n  margin-right: ${props => props.margin || '0px'};\n  margin-left: ${props => props.marginL || '0px'};\n  color: ${({ color }) => handleColorText(color)};\n  font-weight: ${({ weight }) => handleWeightText(weight)};\n  letter-spacing: 0.64px;\n  font-size: 16px;\n`;\n\nexport const TopMenu = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 40px;\n  @media screen and (min-width: 768px) {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 92px;\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\n\nexport const IconLogout = styled.svg`\n  stroke: var(--bg-color);\n  &:hover {\n    ${'' /* fill: green; */}\n  }\n`;\n\nexport const IconCross = styled.svg`\nmargin-bottom: 38px;\nstroke: var(--accent-color);\n\n  &:hover {\n    ${'' /* fill: green; */}\n  }\n  @media screen and (min-width: 768px) {\n   \n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\n\nexport const LoginButton = styled(NavLink)`\n  border-radius: 40px;\n  border: 2px solid var(--accent-color);\n  background: var(--accent-color);\n  cursor: pointer;\n  ${'' /* display: none; */}\n  display: ${props => (props.isMobile ? 'flex' : 'none')};\n  margin-bottom: 12px;\n  width: 165px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (min-width: 768px) {\n    padding-right: 20px;\n    padding-left: 20px;\n    ${'' /* margin-top: 24px; */}\n    margin-right: 20px;\n    margin-bottom: 0;\n  }\n\n  @media screen and (min-width: 1280px) {\n    ${'' /* margin-top: 20px; */}\n    ${'' /* padding-top: 4px; */}\n    padding-right:20px;\n    padding-left: 20px;\n    margin-right: 20px;\n  }\n`;\n\nexport const RegisterButton = styled(NavLink)`\n  display: ${props => (props.isMobile ? 'flex' : 'none')};\n  border-radius: 40px;\n  background: var(--main-light-color);\n  border: 2px solid var(--accent-color);\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  height: 40px;\n  width: 165px;\n\n  @media screen and (min-width: 768px) {\n    ${\n      '' /* max-width: 768px;\n    padding-left: 32px;\n    padding-right: 32px; */\n    }\n    margin-right: 24px;\n    width: 142px;\n    ${'' /* margin-top: 24px; */}\n    display: flex;\n    align-items: center;\n  }\n\n  @media screen and (min-width: 1280px) {\n    display: flex;\n    align-items: center;\n  }\n`;\n\nexport const IconPawPrint = styled.svg`\n  fill: var(--main-light-color);\n\n  &:hover {\n    ${'' /* fill: green; */}\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 82px;\n  \n  @media screen and (min-width: 768px) {\n    display: flex;\n  }\n`;\n\nexport const ButtonContainer = styled.div`\ndisplay:flex;\nflex-direction: column-reverse;\nalign-items: flex-end; \n\n@media screen and (min-width: 768px) {\n  display: flex;}\n`;","import styled from 'styled-components';\n\nexport const MainLogo = styled.img`\n  margin: 0;\n  @media screen and(min-width: 768px) {\n    margin: 0;\n  }\n\n  @media screen and (min-width: 1280px) {\n    ${'' /* margin-right: 80px; */}\n  }\n`;\n\nexport default MainLogo;\n","import { NavLink } from 'react-router-dom';\n\nimport Largepng from '../../images/x1/logo/logo-default.png';\nimport Large from '../../images/x1/logo/logo-default.webp';\nimport LargeRetina from '../../images/x2/logo/logo-default.webp';\nimport Smallpng from '../../images/x1/logo/logo-small.png';\nimport Small from '../../images/x1/logo/logo-default.webp';\nimport SmallRetina from '../../images/x2/logo/logo-default.webp';\n\nimport { MainLogo } from './Logo.styled';\n\nimport useResize from 'hooks/useResize';\n\n\nconst Logo = () => {\n  const [width] = useResize();\n  \n  return (\n    <NavLink to=\"/\">\n      {width >= 768 && (\n        <picture>\n          <source\n            media=\"(min-width: 768px)\"\n            srcSet={`${Large} 1x, \n              ${LargeRetina} 2x\n        `}\n            type=\"image/webp\"\n          />\n          <MainLogo src={Largepng} alt=\"Logo\" />\n        </picture>\n      )}\n      {width < 768 && (\n        <picture>\n          <source\n            media=\"(min-width: 768px)\"\n            srcSet={`${Small} 1x, \n              ${SmallRetina} 2x\n        `}\n            type=\"image/webp\"\n          />\n          <MainLogo src={Smallpng} alt=\"Logo\" />\n        </picture>\n      )}\n    </NavLink>\n  );\n};\n\nexport default Logo;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  border-radius: 40px;\n  background: var(--dark-blue);\n  border: 2px solid var(--dark-blue);\n  cursor: pointer;\n  display: ${props => (props.isMobile ? 'flex' : 'none')};\n\n  @media screen and (min-width: 768px) {\n    height: 44px;\n    height: 40px;\n    width: 135px;\n    justify-content: center;\n    align-items: center;\n\n    display: ${props => (props.isMobile ? 'flex' : 'none')};\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding-right: 20px;\n    padding-left: 20px;\n    display: flex;\n\n    margin-right: 20px;\n  }\n`;\n\nexport const IconLogout = styled.svg`\n  stroke: ${props => (props.isBlue ? 'var(--dark-blue)' : 'var(--bg-color)')};\n  &:hover {\n    ${'' /* fill: green; */}\n  }\n`;\n\nconst handleWeightText = weight => {\n  switch (weight) {\n    case 'usual':\n      return '500';\n    case 'semi-bold':\n      return '600';\n    case 'bold':\n      return '700';\n    default:\n      return '500';\n  }\n};\n\nexport const ButtonText = styled.p`\n  margin-right: ${props => props.margin || '0px'};\n  margin-left: ${props => props.marginL || '0px'};\n  color: ${props => (props.isGrey ? '#888888' : 'var(--bg-color)')};\n  font-weight: ${({ weight }) => handleWeightText(weight)};\n\n  @media screen and (min-width: 768px) {\n    font-family: Manrope;\n    font-size: 16px;\n    font-style: normal;\n    line-height: normal;\n    letter-spacing: 0.64px;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport authOperations from 'redux/auth/operations';\nimport { Button, ButtonText, IconLogout } from 'components/Logout/Logout.styled';\nimport sprite from '../../images/icons.svg';\nimport ModalApproveAction from 'components/ModalApproveAction/ModalApproveAction';\n\nconst Logout = ({ isMobile, isBlue, isGrey }) => {\n  const dispatch = useDispatch();\n  const onLogout = () => dispatch(authOperations.logoutUser());\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const toggleModal = () => {\n    setIsModalOpen(prevState => !prevState);\n  };\n\n  return (\n    <>\n      <Button onClick={toggleModal} isMobile={isMobile}>\n        <ButtonText color=\"logout\" weight=\"bold\" margin=\"8px\" isGrey={isGrey}>\n          Logout\n        </ButtonText>\n        <IconLogout width={24} height={24} isBlue={isBlue}>\n          <use href={`${sprite}#icon-logout`}></use>\n        </IconLogout>\n      </Button>\n      {isModalOpen && (\n        <ModalApproveAction\n          isOpen={isModalOpen}\n          toggleModal={toggleModal}\n          onApprove={onLogout}\n          onRequestClose={toggleModal}\n          btnIconColor={'#fef9f9'}\n          btnIconName={'icon-logout'}\n        >\n          Already leaving?\n        </ModalApproveAction>\n      )}\n    </>\n  );\n};\n\nexport default Logout;\n","import { useSelector } from 'react-redux';\nimport authSelector from 'redux/auth/authSelector';\nimport { createPortal } from 'react-dom';\nimport useResize from 'hooks/useResize';\nimport {\n  Test,\n  CloseButton,\n  ButtonText,\n  TopMenu,\n  IconCross,\n  LoginButton,\n  IconPawPrint,\n  RegisterButton,\n  Container,\n  IconUser,\n  UserButton,\n} from './MobileMenu.styled';\nimport Logo from '../Logo/Logo';\nimport Nav from '../Nav/Nav';\nimport Logout from 'components/Logout/Logout';\nimport sprite from '../../images/icons.svg';\n\nconst MobileMenu = ({ openMenu, toggleMenu }) => {\n   const [width] = useResize();\n  const name = useSelector(authSelector.userNameSelector);\n  const isLogged = useSelector(authSelector.loggedInSelector);\n\n  return createPortal(\n    <Test isOpen={openMenu}>\n      <TopMenu>\n        <div>\n          <Logo />\n        </div>\n        {!isLogged ? (\n          <>\n            <Container>\n              <LoginButton isMobile={true} to=\"/login\" onClick={() => toggleMenu()}>\n                <ButtonText color=\"login\" margin=\"8px\" weight=\"bold\">\n                  Log IN\n                </ButtonText>\n                <IconPawPrint width={24} height={24}>\n                  <use href={`${sprite}#icon-pawprint-1`}></use>\n                </IconPawPrint>\n              </LoginButton>\n              <RegisterButton isMobile={true} to=\"/register\" onClick={() => toggleMenu()}>\n                <ButtonText color=\"register\" weight=\"semi-bold\">\n                  Registration\n                </ButtonText>\n              </RegisterButton>\n            </Container>\n            <CloseButton type=\"button\" onClick={() => toggleMenu()}>\n              <IconCross width={24} height={24}>\n                <use href={`${sprite}#icon-cross`}></use>\n              </IconCross>\n            </CloseButton>\n            <Nav isMobile />\n          </>\n        ) : (\n          <>\n            {width > 768 && width < 1280 && <Logout isMobile />}\n            {width < 768 && (\n              <>\n                  <UserButton to=\"/user\">\n                    <IconUser width={24} height={24}>\n                      <use href={`${sprite}#icon-user-1`}></use>\n                    </IconUser>\n                    <ButtonText color=\"name\" weight=\"usual\" marginL=\"12px\">\n                      {name}\n                    </ButtonText>\n                  </UserButton>\n                <Logout isMobile />\n              </>\n            )}\n            <CloseButton type=\"button\" onClick={() => toggleMenu()}>\n              <IconCross width={24} height={24}>\n                <use href={`${sprite}#icon-cross`}></use>\n              </IconCross>\n            </CloseButton>\n            <Nav isMobile />\n          </>\n        )}\n      </TopMenu>\n    </Test>,\n    document.querySelector('#portal-root')\n  );\n};\n\nexport default MobileMenu;\n","import { Nav, ButtonText, LoginButton, RegisterButton, BurgerButton, IconPawPrint, IconBurger } from './AuthNav.styled';\nimport useResize from 'hooks/useResize';\nimport sprite from '../../images/icons.svg';\nimport MobileMenu from 'components/MobileMenu/MobileMenu';\n// import Button from 'components/Button/Button';\n\nconst AuthNav = ({ toggleMenu, menuOpen }) => {\n  const [width] = useResize();\n\n  return (\n    <>\n      <Nav>\n        <LoginButton to=\"/login\" >\n          <ButtonText color=\"login\" margin=\"8px\" weight=\"bold\">\n            Log IN\n          </ButtonText>\n          <IconPawPrint width={24} height={24}>\n            <use href={`${sprite}#icon-pawprint-1`}></use>\n          </IconPawPrint>\n        </LoginButton>\n        <RegisterButton to=\"/register\">\n          <ButtonText color=\"register\" weight=\"semi-bold\">\n            Registration\n          </ButtonText>\n        </RegisterButton>\n        {width < 1280 && (\n          <BurgerButton type=\"button\" onClick={() => toggleMenu()}>\n            <IconBurger width={24} height={24}>\n              <use href={`${sprite}#icon-menu-hamburger`}></use>\n            </IconBurger>\n          </BurgerButton>\n        )}\n      </Nav>\n      {width < 1280 && <MobileMenu toggleMenu={toggleMenu} openMenu={menuOpen} />}\n    </>\n  );\n};\n\nexport default AuthNav;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Nav = styled.nav`\n  display: flex;\n  @media screen and (min-width: 1280px) {\n    right: 0;\n    align-items: center;\n    margin-left: 80px;\n  }\n`;\n\nconst handleColorText = color => {\n  switch (color) {\n    case 'login':\n      return 'var(--bg-color)';\n    case 'register':\n      return 'var(--accent-color)';\n    case 'logout':\n      return 'var(--bg-color)';\n    case 'name':\n      return 'var(--accent-color)';\n    default:\n      return 'var(--main-color)';\n  }\n};\n\nconst handleWeightText = weight => {\n  switch (weight) {\n    case 'usual':\n      return '500';\n    case 'semi-bold':\n      return '600';\n    case 'bold':\n      return '700';\n    default:\n      return '500';\n  }\n};\n\nexport const ButtonText = styled.p`\n  margin-right: ${props => props.margin || '0px'};\n  margin-left: ${props => props.marginL || '0px'};\n  color: ${({ color }) => handleColorText(color)};\n  font-weight: ${({ weight }) => handleWeightText(weight)};\n\n  @media screen and (min-width: 768px) {\n    font-family: Manrope;\n    font-size: 16px;\n    font-style: normal;\n    line-height: normal;\n    letter-spacing: 0.64px;\n  }\n`;\n\nexport const UserButton = styled(NavLink)`\n  background: var(--main-light-color);\n  border-radius: 20px;\n  border: transparent;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  margin-right: 8px;\n  padding: 0;\n\n  @media screen and (min-width: 768px) {\n    height: 40px;\n    display: flex;\n    align-items: center;\n  }\n\n  @media screen and (min-width: 1280px) {\n    height: 44px;\n    width: 113px;\n  }\n`;\n\nexport const BurgerButton = styled.button`\n  cursor: pointer;\n  color: var(--main-light-color);\n  border: transparent;\n  background: var(--main-light-color);\n  display: flex;\n  align-items: center;\n  padding: 0;\n`;\n\nexport const IconLogout = styled.svg`\n  stroke: var(--bg-color);\n  &:hover {\n    ${'' /* fill: green; */}\n  }\n`;\n\nexport const IconUser = styled.svg`\n  stroke: var(--accent-color);\n\n  &:hover {\n    ${'' /* fill: green; */}\n  }\n`;\n\nexport const IconBurger = styled.svg`\n  stroke: #ffc107;\n\n  &:hover {\n    ${'' /* fill: green; */}\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport authSelector from 'redux/auth/authSelector';\nimport { Nav, ButtonText, UserButton, BurgerButton, IconUser, IconBurger } from './UserNav.styled';\nimport Logout from 'components/Logout/Logout';\nimport MobileMenu from 'components/MobileMenu/MobileMenu';\nimport useResize from 'hooks/useResize';\nimport sprite from '../../images/icons.svg';\nimport ModalApproveAction from 'components/ModalApproveAction/ModalApproveAction';\n\nconst UserNav = ({ toggleMenu, menuOpen }) => {\n  const name = useSelector(authSelector.userNameSelector);\n  const [width] = useResize();\n\n  return (\n    <>\n      <Nav>\n        <Logout onClick={() => <ModalApproveAction />} />\n        {width > 769 && (\n          <UserButton to=\"/user\">\n            <IconUser width={24} height={24}>\n              <use href={`${sprite}#icon-user-1`}></use>\n            </IconUser>\n            <ButtonText color=\"name\" weight=\"usual\" marginL=\"12px\">\n              {name}\n            </ButtonText>\n          </UserButton>\n        )}\n        {width < 768 && (\n          <UserButton to=\"/user\">\n            <IconUser width={24} height={24}>\n              <use href={`${sprite}#icon-user-1`}></use>\n            </IconUser>\n          </UserButton>\n        )}\n        {width < 1280 && (\n          <BurgerButton type=\"button\" onClick={() => toggleMenu()}>\n            <IconBurger width={24} height={24}>\n              <use href={`${sprite}#icon-menu-hamburger`}></use>\n            </IconBurger>\n          </BurgerButton>\n        )}\n      </Nav>\n      {width < 1280 && <MobileMenu toggleMenu={toggleMenu} openMenu={menuOpen} />}\n    </>\n  );\n};\n\nexport default UserNav;\n","import { useSelector } from 'react-redux';\nimport Nav from '../Nav/Nav';\nimport authSelector from 'redux/auth/authSelector';\nimport AuthNav from '../AuthNav/AuthNav';\nimport UserNav from '../UserNav/UserNav';\n\nconst Navigation = ({ toggleMenu, openMenu }) => {\n  const isLogged = useSelector(authSelector.loggedInSelector);\n\n  return (\n    <>\n      <Nav />\n      {isLogged ? (\n        <UserNav toggleMenu={toggleMenu} menuOpen={openMenu} />\n      ) : (\n        <AuthNav toggleMenu={toggleMenu} menuOpen={openMenu} />\n      )}\n    </>\n  );\n};\n\nexport default Navigation;\n","import { useState } from 'react';\nimport { MainHeader } from './Header.styled';\nimport Navigation from 'components/Navigation/Navigation';\nimport Logo from 'components/Logo/Logo';\n\nconst Header = () => {\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  const toggleMenu = () => {\n    setMenuOpen(!menuOpen);\n  };\n\n  return (\n    <MainHeader>\n      <Logo toggleMenu={toggleMenu} />\n      <Navigation toggleMenu={toggleMenu} openMenu={menuOpen} />\n    </MainHeader>\n  );\n};\n\nexport default Header;\n","import { Outlet } from 'react-router-dom';\nimport { Container } from './SharedLayout.styled';\nimport Header from '../Header/Header';\n\nconst SharedLayout = () => {\n  return (\n    <Container>\n      <Header />\n      <main>\n        <Outlet />\n      </main>\n    </Container>\n  );\n};\n\nexport default SharedLayout;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","MainHeader","MainNav","props","isMobile","Link","NavLink","_templateObject2","_ref","_jsxs","children","_jsx","to","Nav","LoginButton","ButtonText","_templateObject3","margin","marginL","color","handleColorText","_ref2","weight","handleWeightText","RegisterButton","_templateObject4","BurgerButton","_templateObject5","IconPawPrint","_templateObject6","IconBurger","_templateObject7","_useState","useState","_useState2","_slicedToArray","width","setWidth","useEffect","handleWidth","window","innerWidth","addEventListener","removeEventListener","Test","isOpen","UserButton","IconUser","CloseButton","TopMenu","_templateObject8","IconCross","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","MainLogo","_useResize","useResize","media","srcSet","concat","Large","LargeRetina","type","src","alt","Small","SmallRetina","Button","IconLogout","isBlue","isGrey","dispatch","useDispatch","isModalOpen","setIsModalOpen","toggleModal","prevState","_Fragment","onClick","height","href","sprite","ModalApproveAction","onApprove","authOperations","onRequestClose","btnIconColor","btnIconName","openMenu","toggleMenu","name","useSelector","authSelector","isLogged","createPortal","Logo","Logout","document","querySelector","menuOpen","MobileMenu","UserNav","AuthNav","setMenuOpen","Navigation","Header","Outlet"],"sourceRoot":""}