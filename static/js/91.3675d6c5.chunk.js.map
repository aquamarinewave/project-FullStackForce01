{"version":3,"file":"static/js/91.3675d6c5.chunk.js","mappings":"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","sources":["components/WorkingHours/WorkingHours.styled.js","components/WorkingHours/WorkingHours.jsx","components/FriendsItem/FriendsItem.styled.js","components/FriendsItem/FriendsItem.jsx","services/api/friendsFetch.js","components/OurFriendsList/OurFriendsList.styled.js","components/OurFriendsList/OurFriendsList.jsx","pages/OurFriendsPage/OurFriendsPage.styled.js","pages/OurFriendsPage/OurFriendsPage.jsx"],"sourcesContent":["\nimport styled from 'styled-components';\n\nconst WorkingTimeToday = styled.button`\n  position: relative;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n  border: none;\n  background-color: #fff;\n  text-align: left;\n  padding: 0; \n  &:hover {\n    color: #54adff;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 16px;\n  }\n  \n\n`;\n\nconst InfoTitle = styled.p`\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 16px;\n  }\n`;\n\nconst InfoLink = styled.div`\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n  @media screen and (min-width: 1280px) {\n    display: block;\n    font-size: 16px;\n    width: 197px;\n  }\n`;\n\nconst EmptyBlock = styled.div`\n  height: 17px;\n  @media screen and (min-width: 768px) {\n    height: 19px;\n    width: 173px;\n  }\n  @media screen and (min-width: 1280px) {\n    height: 22px;\n    width: 197px;\n  }\n`;\n\nconst ModalContent = styled.div`\n  position: absolute;\n  width: 126px;\n  border: 1px solid #54adff;\n  background-color: #fff;\n  padding: 12px;\n  border-radius: 5px;\n`;\n\nconst TableDayWeek = styled.div`\n  display: inline-block;\n  width: 19px;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  margin-right: 9px;  \n`;\n\nconst TableDayTime = styled.div`\n  display: inline-block;\n  width: 72px;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n`;\n\n\nexport { ModalContent, WorkingTimeToday, InfoTitle, InfoLink, EmptyBlock, TableDayWeek, TableDayTime };\n","import React, { useState, useEffect } from 'react';\n\nimport {\n  ModalContent,\n  InfoTitle,\n  InfoLink,\n  EmptyBlock,\n  WorkingTimeToday,\n  TableDayWeek,\n  TableDayTime,\n} from './WorkingHours.styled.js';\n\nconst WorkingHours = props => {\n  const { daysWorkingInWeek } = props;\n  const [currentDay, setCurrentDay] = useState('');\n\n  const DayIsSunday = 6;\n\n  const daysOfWeek = ['MN', 'TU', 'WE', 'TH', 'FR', 'SA', 'SU'];\n\n  useEffect(() => {\n    const getDayOfWeek = () => {\n      const currentDate = new Date();\n      const dayOfWeek = currentDate.getDay();\n      setCurrentDay(dayOfWeek);\n    };\n\n    getDayOfWeek();\n  }, []);\n\n  const [isModalOpen, setModalOpen] = useState(false);\n\n  const handleButtonClick = () => {\n    setModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n\n  const renderModalWindow = () => {\n    const renderedItems = [];\n\n    for (let i = 0; i < daysOfWeek.length; i++) {\n      renderedItems.push(\n        <li key={i}>\n          <TableDayWeek>{daysOfWeek[i]}</TableDayWeek>\n          {!daysWorkingInWeek[i].isOpen ? (\n            <TableDayTime>Closed</TableDayTime>\n          ) : (\n            <TableDayTime>{daysWorkingInWeek[i].from + '-' + daysWorkingInWeek[i].to}</TableDayTime>\n          )}\n        </li>\n      );\n    }\n    return renderedItems;\n  };\n\n  return (\n    <div>\n      <WorkingTimeToday onClick={handleButtonClick}>    \n        \n        <InfoTitle>Time:</InfoTitle>\n        {(!daysWorkingInWeek || daysWorkingInWeek.length === 0) ?\n          (<EmptyBlock></EmptyBlock>) : (\n        currentDay === 0 && daysWorkingInWeek[DayIsSunday]) ? (\n          daysWorkingInWeek[DayIsSunday].isOpen ? (\n            <InfoLink>\n              {daysWorkingInWeek[DayIsSunday].from} - {daysWorkingInWeek[DayIsSunday].to}\n            </InfoLink>\n          ) : (\n            <InfoLink>closed today</InfoLink>\n          )\n        ):(\n          <InfoLink>\n            {daysWorkingInWeek[DayIsSunday - 1].from} - {daysWorkingInWeek[DayIsSunday - 1].to}\n          </InfoLink>\n          )}\n        \n        </WorkingTimeToday>\n\n      {isModalOpen && (\n        <ModalContent onClick={closeModal}>\n          <ul>{renderModalWindow()}</ul>\n        </ModalContent>\n      )}\n    </div>\n  );\n};\n\nexport default WorkingHours;\n","import styled from 'styled-components';\n\nconst FriendsItemThumb = styled.div`\n  position: relative;\n  width: 280px;\n  height: auto;\n  border-radius: 40px;\n  padding: 16px 12px;\n  background: var(--unnamed, #fff);\n  box-shadow: 3px 8px 14px 0px rgba(136, 198, 253, 0.19);\n  margin-bottom: 20px;\n  @media screen and (min-width: 768px) {\n    width: 336px;\n    padding: 12px;\n    margin: 0;\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 16px;\n    width: 395px;\n  }\n`;\n\nconst Title = styled.a`\n  display: block;\n  color: var(--unnamed, #54adff);\n  text-align: center;\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: normal;\n  margin-bottom: 16px;\n  @media screen and (min-width: 768px) {\n    height: 54px;\n  }\n  @media screen and (min-width: 1280px) {\n    height: 54px;\n  }\n`;\n\nconst Info = styled.div`\n  &:hover {\n    color: #54adff;\n  }\n`;\n\nconst InfoItemFriend = styled.div`\n  display: flex;\n  gap: 12px;\n  @media screen and (min-width: 1280px) {\n    gap: 20px;\n  }\n`;\n\nconst LogoDiv = styled.div`\n  width: 100px;\n  @media screen and (min-width: 768px) {\n    width: 124px;\n  }\n  @media screen and (min-width: 1280px) {\n    display: block;\n    width: 146px;\n  }\n`;\n\nconst Logo = styled.img`\n  width: 100%;\n  object-fit: contain;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 146px;\n  }\n`;\n\nconst InfoBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nconst EmptyBlock = styled.div`\n  height: 17px;\n  @media screen and (min-width: 768px) {\n    height: 19px;\n    width: 173px;\n  }\n  @media screen and (min-width: 1280px) {\n    height: 22px;\n    width: 197px;\n  }\n`;\n\nconst EmptyBlockAddress = styled.div`\n  height: 56px;\n  width: 145px;\n  @media screen and (min-width: 768px) {\n    width: 173px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 197px;\n  }\n`;\n\nconst InfoTitle = styled.p`\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 16px;\n  }\n`;\n\nconst InfoLink = styled.a`\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n  @media screen and (min-width: 1280px) {\n    display: block;\n    font-size: 16px;\n    width: 197px;\n  }\n`;\n\nconst InfoLinkAddress = styled.a`\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  height: 56px;\n  width: 145px;\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n  @media screen and (min-width: 1280px) {\n    height: 56px;\n    width: 197px;\n  }\n`;\nconst InfoLinkAddressDiv = styled.div`\n  height: 56px;\n  width: 145px;\n  @media screen and (min-width: 768px) {\n    height: 56px;\n    width: 173px;\n  }\n  @media screen and (min-width: 1280px) {\n    height: 56px;\n    width: 197px;\n  }\n`;\n\n\n\nexport {\n  FriendsItemThumb,\n  Title,\n  LogoDiv,\n  Logo,\n  InfoItemFriend,\n  InfoBlock,\n  EmptyBlock,\n  EmptyBlockAddress,\n  Info,\n  InfoTitle,\n  InfoLink,\n  InfoLinkAddress,\n  InfoLinkAddressDiv,\n};\n","import React from 'react';\nimport WorkingHours from '../WorkingHours/WorkingHours';\n\nimport {\n  FriendsItemThumb,\n  Title,\n  LogoDiv,\n  Logo,\n  InfoItemFriend,\n  InfoBlock,\n  EmptyBlock,\n  EmptyBlockAddress,\n  Info,\n  InfoTitle,\n  InfoLink,\n  InfoLinkAddress,\n  InfoLinkAddressDiv,\n} from './FriendsItem.styled';\n\nconst FriendsItem = ({ responseByFriends }) => {\n  const { title, url, addressUrl, imageUrl, address, workDays, phone, email } = responseByFriends;\n\n  return (\n    <div>\n      <FriendsItemThumb>\n        <Title href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n          {title}\n        </Title>\n\n        <InfoItemFriend>\n          <LogoDiv>\n            <Logo src={imageUrl} alt=\"Logo friend\"></Logo>\n          </LogoDiv>\n\n          <InfoBlock>\n\n              <WorkingHours daysWorkingInWeek={workDays}></WorkingHours>\n\n            <Info>\n              <InfoTitle>Address:</InfoTitle>\n              {!address ? (\n                <EmptyBlockAddress></EmptyBlockAddress>\n              ) : (\n                <InfoLinkAddressDiv>\n                  <InfoLinkAddress href={addressUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {address}\n                  </InfoLinkAddress>\n                </InfoLinkAddressDiv>\n              )}\n            </Info>\n\n            <Info>\n              <InfoTitle>Email:</InfoTitle>\n              {!email ? <EmptyBlock></EmptyBlock> : <InfoLink href={`mailto:${email}`}> {email} </InfoLink>}\n            </Info>\n\n            <Info>\n              <InfoTitle>Phone:</InfoTitle>\n              {!phone ? <EmptyBlock></EmptyBlock> : <InfoLink href={`tel:${phone}`}> {phone} </InfoLink>}\n            </Info>\n          </InfoBlock>\n        </InfoItemFriend>\n      </FriendsItemThumb>\n    </div>\n  );\n};\n\nexport default FriendsItem;\n","import axios from 'axios';\n\nexport async function fetchByFriends() {\n  const baseURL = `https://fullstackforce.onrender.com/api/friends`;\n  const data = await axios.get(baseURL);\n  return data;\n}\n","import styled from 'styled-components';\n\nconst Wrapper = styled.ul`\n  liststyle: none;\n  width: 280px;\n  padding-bottom: 75px;\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    gap: 32px;\n    width: 704px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 1250px;\n    padding-bottom: 69px;\n  }\n`;\n\nexport { Wrapper };\n","import FriendsItem from 'components/FriendsItem/FriendsItem.jsx';\nimport { useState, useEffect } from 'react';\nimport { fetchByFriends } from '../../services/api/friendsFetch.js';\n\nimport { Wrapper } from './OurFriendsList.styled.js';\n\nconst OurFriendsList = () => {\n  const [resByFriends, setResByFriends] = useState();\n\n  useEffect(() => {\n    async function fetchDataByFriends() {\n      try {\n        const response = await fetchByFriends();\n        setResByFriends(response.data[0].friends);\n      } catch (error) {}\n    }\n\n    fetchDataByFriends();\n  }, []);\n\n  return (\n    <div>\n      {resByFriends && (\n        <Wrapper>\n          {resByFriends.map(({ _id, title, url, addressUrl, imageUrl, address, workDays, phone, email }) => {\n            return (\n              <li key={_id}>\n                <FriendsItem\n                  responseByFriends={{\n                    title,\n                    url,\n                    addressUrl,\n                    imageUrl,\n                    address,\n                    workDays,\n                    phone,\n                    email,\n                  }}\n                />\n              </li>\n            );\n          })}\n        </Wrapper>\n      )}\n    </div>\n  );\n};\n\nexport default OurFriendsList;\n","import styled from 'styled-components';\n\nconst OurFriendsPageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-top: 40px;\n  align-items: center;\n  width: 100%;\n`;\n\nconst Title = styled.h1`\n  display: flex;\n  font-style: normal;\n  font-size: 24px;\n  line-height: normal;\n  text-align: center;\n  margin-bottom: 24px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 40px;\n    font-size: 48px;\n    font-weight: 700;\n  }\n\n  @media screen and (min-width: 1280px) {\n    margin-bottom: 60px;\n  }\n`;\n\nexport { OurFriendsPageContainer, Title };\n","import OurFriendsList from '../../components/OurFriendsList/OurFriendsList';\nimport { OurFriendsPageContainer, Title } from './OurFriendsPage.styled';\n\nconst OurFriendsPage = () => {\n  return (\n    <OurFriendsPageContainer>\n      <Title>Our friends</Title>\n      <OurFriendsList />\n    </OurFriendsPageContainer>\n  );\n};\n\nexport default OurFriendsPage;\n"],"names":["WorkingTimeToday","styled","_templateObject","_taggedTemplateLiteral","InfoTitle","_templateObject2","InfoLink","_templateObject3","EmptyBlock","_templateObject4","ModalContent","_templateObject5","TableDayWeek","_templateObject6","TableDayTime","_templateObject7","props","daysWorkingInWeek","_useState","useState","_useState2","_slicedToArray","currentDay","setCurrentDay","daysOfWeek","useEffect","dayOfWeek","Date","getDay","getDayOfWeek","_useState3","_useState4","isModalOpen","setModalOpen","_jsxs","children","onClick","_jsx","length","isOpen","from","to","DayIsSunday","renderedItems","i","push","renderModalWindow","FriendsItemThumb","Title","Info","InfoItemFriend","LogoDiv","Logo","InfoBlock","_templateObject8","EmptyBlockAddress","_templateObject9","_templateObject10","_templateObject11","InfoLinkAddress","_templateObject12","InfoLinkAddressDiv","_templateObject13","_ref","responseByFriends","title","url","addressUrl","imageUrl","address","workDays","phone","email","href","target","rel","src","alt","WorkingHours","concat","fetchByFriends","_fetchByFriends","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","axios","sent","abrupt","stop","Wrapper","resByFriends","setResByFriends","_fetchDataByFriends","response","friends","t0","fetchDataByFriends","map","_id","FriendsItem","OurFriendsPageContainer","OurFriendsList"],"sourceRoot":""}